<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Test Driven Development on Franklin Chen</title>
    <link>http://franklinchen.com/categories/test-driven-development/atom/index.xml</link>
    <description>Recent content in Test Driven Development on Franklin Chen</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="http://franklinchen.com/categories/test-driven-development/atom/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Report on the second Pittsburgh TechFest, 2013</title>
      <link>http://franklinchen.com/blog/2013/06/01/report-on-the-second-pittsburgh-techfest-2013/</link>
      <pubDate>Sat, 01 Jun 2013 22:06:17 -0400</pubDate>
      
      <guid>http://franklinchen.com/blog/2013/06/01/report-on-the-second-pittsburgh-techfest-2013/</guid>
      <description>&lt;p&gt;Last year (&lt;a href=&#34;../../blog/2012/06/09/report-on-the-first-pittsburgh-techfest-2012/&#34;&gt;my report here&lt;/a&gt;), I attended the very first &lt;a href=&#34;http://pghtechfest.com/&#34;&gt;Pittsburgh Tech Fest&lt;/a&gt;, held at &lt;a href=&#34;http://www.laroche.edu/&#34;&gt;LaRoche College&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;my-second-year&#34;&gt;My second year&lt;/h2&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;http://pghtechfest.com/images/pt_logo_2.png&#34; /&gt;
    
    
    &lt;figcaption&gt;
        &lt;h4&gt;Pittsburgh TechFest 2013&lt;/h4&gt;
        
    &lt;/figcaption&gt;
    
&lt;/figure&gt;


&lt;p&gt;I was very excited to attend it again this year, with a twist: I reported last year that I was inspired by seeing people I know giving talks, and two months later, after the very first &lt;a href=&#34;http://steelcityruby.org/&#34;&gt;Steel City Ruby Conf&lt;/a&gt; &lt;a href=&#34;../../blog/2012/08/07/the-first-steel-city-ruby-conference-an-amazing-experience/&#34;&gt;decided to finally start giving talks myself&lt;/a&gt;, starting with user group talks. When the organizers of this year&amp;rsquo;s Pittsburgh TechFest put out a call for presentations four months ago, I knew I wanted to submit some, and so I did. My talk &amp;ldquo;Stop overusing regular expressions!&amp;rdquo; was accepted!&lt;/p&gt;

&lt;p&gt;This year I had a goal of enjoying the conference even more than I enjoyed last year&amp;rsquo;s, and I succeeded!&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h2 id=&#34;speakers-dinner-the-evening-before-the-conference&#34;&gt;Speakers&amp;rsquo; dinner the evening before the conference&lt;/h2&gt;

&lt;p&gt;All speakers were invited to a speakers&amp;rsquo; dinner for the evening before the one-day conference, so I eagerly attended, in order to see some old friends as well as meet new people I hadn&amp;rsquo;t met before. That was fun. This was at &lt;a href=&#34;http://www.foxandhound.com/&#34;&gt;Fox and Hound Bar and Grill&lt;/a&gt; on McKnight Road. I had to fight through considerable rush hour traffic (and also feeling rather ill: more on that later) to get up north out there from the city, but made it. Tortilla chips, veggie trays, baked potatoes, chicken wings: not my usual diet, but those who know me know that I actually love this stuff, ha (thirty pounds ago I ate like that more often)!&lt;/p&gt;

&lt;p&gt;The always eerie thing is meeting people in person &lt;em&gt;finally&lt;/em&gt; that you&amp;rsquo;ve mainly &amp;ldquo;known&amp;rdquo; from Twitter or email. For example, last year, when I was far more &lt;em&gt;shy&lt;/em&gt;, I never actually met the founders of the new conference and talked with them. At the speakers&amp;rsquo; dinner, I finally met Eric Kepes and Dave Hoerster, for example!&lt;/p&gt;

&lt;p&gt;Last year, I basically made myself invisible and kind of only hung out a little bit with some people, whom I already knew! &lt;a href=&#34;../../blog/2012/08/22/steel-city-ruby-conf-review-part-1-its-about-people/&#34;&gt;My experience at Steel City Ruby Conf completely altered how I feel I should relate to people, not only in programming conferences but in life&lt;/a&gt;. I&amp;rsquo;m still slowly getting out of my shell that I basically lived in for four decades, but I know I&amp;rsquo;ve made some real progress in the past year.&lt;/p&gt;

&lt;h2 id=&#34;breakfast-the-day-of-the-conference&#34;&gt;Breakfast the day of the conference&lt;/h2&gt;

&lt;p&gt;Unfortunately, because I was in a rush, I did not eat any breakfast before leaving home. Somehow, I had assumed there would be breakfast provided at the conference (in the form of bagels and fruit, something like that). I was wrong. There was just juice, coffee, tea. Luckily, I had an emergency energy bar in my bag, and ate it.&lt;/p&gt;

&lt;p&gt;Others I talked to were also confused by the lack of food. Maybe in the future it should be made clear whether there is any food provided at the beginning of the day.&lt;/p&gt;

&lt;h2 id=&#34;keynote&#34;&gt;Keynote&lt;/h2&gt;

&lt;p&gt;This year, the keynote speech was by &lt;a href=&#34;http://www.linkedin.com/in/dickwall&#34;&gt;Dick Wall&lt;/a&gt;, whom some of you may know from the &lt;a href=&#34;http://javaposse.com/&#34;&gt;Java Posse&lt;/a&gt; podcast, others from the &lt;a href=&#34;http://www.scalawags.tv/&#34;&gt;Scalawags&lt;/a&gt; podcast that started half a year ago (Scala fans, you have to watch this: it also features &lt;a href=&#34;http://www.linkedin.com/in/djspiewak&#34;&gt;Daniel Spiewak&lt;/a&gt; and Pittsburgh&amp;rsquo;s own &lt;a href=&#34;http://jsuereth.com/&#34;&gt;Josh Suereth&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Dick gave a passionate, personal, entertaining, and thoughtful talk urging all of us to adopt a mindset of taking risks and embracing &lt;em&gt;failure&lt;/em&gt;, just as he has in his professional life: he has worked at many companies, including Google and small startups, and his own currently, &lt;a href=&#34;http://www.escalatesoft.com/&#34;&gt;Escalate&lt;/a&gt;, which is devoted to Scala training and mentoring.&lt;/p&gt;

&lt;h3 id=&#34;some-lessons-from-dick&#34;&gt;Some lessons from Dick&lt;/h3&gt;

&lt;p&gt;Some of the lessons Dick imparted, while putting up slides of some pretty epic failures (software or otherwise, including mountain biking, which he does):&lt;/p&gt;

&lt;p&gt;Do not overplan; be prepared to adapt to the present situation.&lt;/p&gt;

&lt;p&gt;If something is not working, don&amp;rsquo;t continue just because you have invested in it already (&lt;a href=&#34;http://en.wikipedia.org/wiki/Sunk_costs&#34;&gt;sunk cost&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;Do something new and valuable; for example, don&amp;rsquo;t write yet another &lt;a href=&#34;http://en.wikipedia.org/wiki/Content_management_system&#34;&gt;CMS&lt;/a&gt;, because people have already done it.&lt;/p&gt;

&lt;p&gt;The worst thing to do is to &amp;ldquo;waste engineering effort&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;Fail &lt;em&gt;early&lt;/em&gt;, never in production! Example: the &lt;a href=&#34;http://en.wikipedia.org/wiki/Tacoma_Narrows_Bridge&#34;&gt;Tacoma Narrows Bridge&lt;/a&gt; disaster.&lt;/p&gt;

&lt;p&gt;If you fail repeatedly at something, maybe it&amp;rsquo;s time to stop it and move on.&lt;/p&gt;

&lt;p&gt;Honest communication is key. Often, late failure happens because someone was afraid to honestly speak up about design flaws, and often this is because there is a culture against such honesty.&lt;/p&gt;

&lt;p&gt;Don&amp;rsquo;t focus on &lt;a href=&#34;http://en.wikipedia.org/wiki/Happy_path&#34;&gt;happy path testing&lt;/a&gt;, but on the sad path: think up front about how something can fail, before even coding.&lt;/p&gt;

&lt;p&gt;You can&amp;rsquo;t know whether you&amp;rsquo;ve succeeded or failed unless you have defined concretely what success means in a given context.&lt;/p&gt;

&lt;p&gt;The &lt;a href=&#34;http://en.wikipedia.org/wiki/Software_craftsmanship&#34;&gt;software craftsmanship&lt;/a&gt; movement, which focuses on quality, is well-meaning but often results in people afraid to try new things (such as learn and use a new language) because they are afraid of writing &amp;ldquo;bad code&amp;rdquo; at first. It&amp;rsquo;s OK to start out by writing bad code.&lt;/p&gt;

&lt;p&gt;One way of failing early is to push failure to compile time (he briefly gave a plug for Scala&amp;rsquo;s type system as one way to do this).&lt;/p&gt;

&lt;h2 id=&#34;overview-of-sessions&#34;&gt;Overview of sessions&lt;/h2&gt;

&lt;p&gt;As with last year, or actually far &amp;ldquo;worse&amp;rdquo;, there were a huge number of sessions and limited time slots. I counted six major time slots, with an average of nine sessions during each, so anyone who attended a session in a given time slot basically had choose &lt;em&gt;one out of nine&lt;/em&gt;. This is pretty wild. (Depending on logistics, hopefully next year the conference can move to a two-day format.)&lt;/p&gt;

&lt;p&gt;Consistent with my philosophy in the past year of conference attendance, I chose to seek out talks that fulfilled the following criteria:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;topics revolving around philosophy, experience, wisdom rather than technical tutorials&lt;/li&gt;
&lt;li&gt;speakers &lt;em&gt;not&lt;/em&gt; from Pittsburgh and whom I do &lt;em&gt;not&lt;/em&gt; already know&lt;/li&gt;
&lt;li&gt;stuff I&amp;rsquo;m very interested in that benefits particularly from a guided intro versus looking up a tutorial online&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;sessions-i-attended&#34;&gt;Sessions I attended&lt;/h2&gt;

&lt;h3 id=&#34;messaging-with-rabbitmq-handerson-gomes-http-www-linkedin-com-in-handersongomes&#34;&gt;Messaging with RabbitMQ (&lt;a href=&#34;http://www.linkedin.com/in/handersongomes&#34;&gt;Handerson Gomes&lt;/a&gt;)&lt;/h3&gt;

&lt;p&gt;Actually, I already know Handerson from Pittsburgh meetups. But, as he offered for his session a sequence of lightning talks on RabbitMQ, I thought I would learn something.&lt;/p&gt;

&lt;p&gt;Unfortunately, after his first couple of intro talks, I was feeling so sleepy and ill (more on my physical condition at the end of this report) that I had to bail out and take a nap. I napped for about half an hour, much needed before the second session. Then I realized I wasn&amp;rsquo;t just sleepy, but also starving, and found a vending machine and got more food! Meanwhile, I immediately logged into my health care provider&amp;rsquo;s Web site and submitted a request for a doctor&amp;rsquo;s appointment on Monday.&lt;/p&gt;

&lt;h3 id=&#34;it-s-cool-nobody-else-knows-what-they-re-doing-either-jared-faris-http-www-jaredthenerd-com&#34;&gt;It&amp;rsquo;s Cool, Nobody Else Knows What They&amp;rsquo;re Doing Either (&lt;a href=&#34;http://www.jaredthenerd.com/&#34;&gt;Jared Faris&lt;/a&gt;)&lt;/h3&gt;

&lt;p&gt;This was an interesting philosophical discussion about career and personal development, much in the lines of the keynote speech by Dick Wall.&lt;/p&gt;

&lt;p&gt;Jared said that to really learn, we have to &lt;em&gt;challenge&lt;/em&gt; ourselves. We have to go beyond our comfort zone. How far? He suggested that we should take on stuff that we&amp;rsquo;re 80% sure we can do: if we are too ambitious and commit to something we feel only 50% sure of, that is too risky, because then we might just fail without really learning something from the experience.&lt;/p&gt;

&lt;h4 id=&#34;some-lessons-from-jared&#34;&gt;Some lessons from Jared&lt;/h4&gt;

&lt;p&gt;&lt;em&gt;Ask for help&lt;/em&gt;. Jared related that in the past, he was too proud to ask for help because there&amp;rsquo;s sometimes an implicit gamesmanship among us software developers: we don&amp;rsquo;t want to look dumber than our friends, and we fear rejection. But he learned that asking for help was effective, because in the long run it means getting better faster, rather than flailing alone. Stop trying to impress people.&lt;/p&gt;

&lt;p&gt;The way to stretch yourself is to build a base of what you do know, so that when you go beyond that, you have the tools to move to the next level.&lt;/p&gt;

&lt;p&gt;Be &amp;ldquo;honest but confident&amp;rdquo;. Do not fear the art of self-promotion: if you hold back on speaking up for yourself because you don&amp;rsquo;t know it all, then you&amp;rsquo;ll lose out to someone who does speak up.&lt;/p&gt;

&lt;h3 id=&#34;stop-overusing-regular-expressions-me&#34;&gt;Stop overusing regular expressions! (me)&lt;/h3&gt;

&lt;p&gt;I could not attend any of the interesting sessions in the third time slot because I was giving a talk.&lt;/p&gt;

&lt;p&gt;Here&amp;rsquo;s &lt;a href=&#34;../../blog/2013/06/01/pittsburgh-tech-fest-2013-my-talk-stop-overusing-regular-expressions/&#34;&gt;my report about my talk&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;lunch&#34;&gt;Lunch&lt;/h3&gt;

&lt;p&gt;Lunch was of the usual La Roche College cafeteria high quality, nutritious and filling. (And I also ate some cake and pie as well, ha!) This time I socialized more, sitting with some people I knew (but not so well) and people I didn&amp;rsquo;t know. It was great.&lt;/p&gt;

&lt;p&gt;I skipped the lunchtime vendor talks. They might have been interesting, but I needed a break from sitting around in talks, and certainly did not feel like taking lunch outside to eat alone while listening to someone talk! There seemed to be a sizable audience for the one outside the cafeteria, however, so I&amp;rsquo;m happy they found it useful!&lt;/p&gt;

&lt;h3 id=&#34;redesign-is-not-a-four-letter-word-adam-kalnas-http-www-linkedin-com-pub-adam-kalnas-4-660-638&#34;&gt;Redesign is not a four letter word (&lt;a href=&#34;http://www.linkedin.com/pub/adam-kalnas/4/660/638&#34;&gt;Adam Kalnas&lt;/a&gt;)&lt;/h3&gt;

&lt;p&gt;So this was a short (30-minute) talk about redesign. Although Adam works in the .NET world, the lessons he learned and shared with us are not platform-specific. He described how an architecture at &lt;a href=&#34;http://www.omnyx.com/&#34;&gt;Omnyx&lt;/a&gt; was redesigned successfully. The steps included&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Writing pinning tests for a system that had no automated tests at all.&lt;/li&gt;
&lt;li&gt;Creating an abstract interface for an existing layer.&lt;/li&gt;
&lt;li&gt;Rewriting code to go through the interface API.&lt;/li&gt;
&lt;li&gt;Creating a parallel implementation for the interface.&lt;/li&gt;
&lt;li&gt;Using &lt;a href=&#34;http://martinfowler.com/bliki/FeatureToggle.html&#34;&gt;feature toggles&lt;/a&gt; to keep both implementations in the code.&lt;/li&gt;
&lt;li&gt;Finally switching off the feature toggle and deleting the old implementation.&lt;/li&gt;
&lt;li&gt;All the while adding more &lt;a href=&#34;http://en.wikipedia.org/wiki/Test-driven_development&#34;&gt;TDD&lt;/a&gt; tests.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It was a really nice story of how a really gnarly legacy architecture was successfully brought into the world of cleaner interfaces and automated tests.&lt;/p&gt;

&lt;h3 id=&#34;node-js-design-patterns-for-the-discerning-developer-aaron-cois-http-www-linkedin-com-pub-constantine-aaron-cois-6-312-824&#34;&gt;Node.js Design Patterns for the Discerning Developer (&lt;a href=&#34;http://www.linkedin.com/pub/constantine-aaron-cois/6/312/824&#34;&gt;Aaron Cois&lt;/a&gt;)&lt;/h3&gt;

&lt;p&gt;I am fairly new to the &lt;a href=&#34;http://nodejs.org/&#34;&gt;Node.js&lt;/a&gt; world, having first heard of it two years ago at a &lt;a href=&#34;http://meetups.jquery.com/events/nodejs-with-todd-eichel&#34;&gt;March 2011 meeting of the Pittsburgh jQuery meetup&lt;/a&gt; in which Todd Eichel introduced Node to the group.&lt;/p&gt;

&lt;p&gt;I don&amp;rsquo;t currently actively use Node except, amusingly, as a vehicle for testing non-client JavaScript code for my own purposes.&lt;/p&gt;

&lt;p&gt;Aaron basically talked about how to deal with the whole &amp;ldquo;callback hell&amp;rdquo; problem when dealing with the asynchronous APIs of Node. There was hairy looking code that he transformed or wrote wrappers for in order to make less hairy, but to my eye it was still hairy. I have forked his &lt;a href=&#34;https://github.com/cacois/node-patterns-discerning&#34;&gt;GitHub repository for the talk&lt;/a&gt; and hope to go through the code more closely.&lt;/p&gt;

&lt;h3 id=&#34;scaling-out-with-akka-actors-josh-suereth-http-jsuereth-com&#34;&gt;Scaling out with Akka Actors (&lt;a href=&#34;http://jsuereth.com/&#34;&gt;Josh Suereth&lt;/a&gt;)&lt;/h3&gt;

&lt;p&gt;I&amp;rsquo;m still not an active &lt;a href=&#34;http://akka.io/&#34;&gt;Akka&lt;/a&gt; user, although there is something I believe I could use Akka for fruitfully at work, to considerably improve some efficiency (but in practice, nobody is complaining about the speed, so as a practical matter it has been of no priority to scale out the task in question), and also some personal projects.&lt;/p&gt;

&lt;p&gt;Josh has been promoting Akka for some time: it was at last year&amp;rsquo;s Pittsburgh TechFest that I got my first real introduction to it. Since then, Josh has given more advanced talks on architectures using Akka, as Akka continues to improve and provide more features.&lt;/p&gt;

&lt;p&gt;I learned quite a bit from this talk about scaling out (vs. scaling up): the focus on topology, the adding of new actors whenever you want to handle some transient state or manage other actors. It&amp;rsquo;s really a different way of thinking than &amp;ldquo;ordinary&amp;rdquo; programming and is perhaps more faithful to the original concept of &amp;ldquo;object-oriented&amp;rdquo; (being focused entirely on being asynchronous and passing immutable messages) than what has been considered object-oriented in the past couple of decades.&lt;/p&gt;

&lt;p&gt;For more details, check out his slides and code at his &lt;a href=&#34;https://github.com/jsuereth/intro-to-actors&#34;&gt;GitHub repository&lt;/a&gt;. Note that the code for the clusters talk is on the &lt;a href=&#34;https://github.com/jsuereth/intro-to-actors/tree/clusters&#34;&gt;&lt;code&gt;clusters&lt;/code&gt; branch&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I am definitely going to start using Akka this year. I think the time for actors has truly come.&lt;/p&gt;

&lt;h2 id=&#34;after&#34;&gt;After&lt;/h2&gt;

&lt;p&gt;Dave Hoerster gave the closing speech, thanking all the many sponsors who supported the conference. It was definitely really cool how many sponsors there were. He also noted that there may be an attempt to scale up to a two-day event, which would be really cool if it can be made to happen.&lt;/p&gt;

&lt;p&gt;There were raffle prizes. Amusingly, the vast number of people randomly chosen had already left the premises (hey, it was a long day), so it took a while to give everything away (although some prizes were marked to be emailed to those who were no longer present).&lt;/p&gt;

&lt;p&gt;After the official conclusion of the conference, some people gathered in groups to have dinner together. I wanted to join Josh and Dick, but knew that I was feeling really miserable and had to go home to shower and sleep.&lt;/p&gt;

&lt;h2 id=&#34;what-next&#34;&gt;What next?&lt;/h2&gt;

&lt;p&gt;I will apply the lessons I learned from all the talks and conversations I participated in.&lt;/p&gt;

&lt;p&gt;One thing I&amp;rsquo;ve done is forked a bunch of GitHub repositories for talks that people have posted online (and not just talks I went to) that seem like useful places for me to concretely learn and explore further. Ideas are fine, but working code is working code!&lt;/p&gt;

&lt;h2 id=&#34;thanks&#34;&gt;Thanks&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;m really grateful not only to attend this conference, but also speak in it, and learn a lot of things, meet new people (and add their blogs to my RSS feeds as well as follow them on Twitter), and share ideas with everyone. I thank the organizers who put in even more work than last year, because of so many more attendees and speakers! I thank the speakers whose presentations I attended (and those I met whose presentations I would have wanted to attended if not for the time conflicts) for sharing their knowledge and experience. And La Roche College was a good venue (and I noticed that this year there was not the temperature problem of last year, when it was just way too cold in the rooms).&lt;/p&gt;

&lt;p&gt;I hope to come to another Pittsburgh TechFest in 2014. Of course, I would submit some talks for it, and come up with helpful topics that are of increasingly more general interest and use.&lt;/p&gt;

&lt;h2 id=&#34;note-on-being-sick&#34;&gt;Note on being sick&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve been sick for a week with contact dermatitis, which I thought I got from poison ivy, but may have come from somewhere else. I was hoping it would clear up on its own, so that I could avoid taking drugs, but I felt increasingly worse yesterday (the itching was very unpleasant and made sleep very difficult), and then during the conference, got even worse. I went home and immediately fell into a nap from exhaustion. When I woke up, I was feeling really terrible. I clearly needed immediate treatment. Abby had come home and told me she was going t take me to the local &lt;a href=&#34;http://upmc.com/Services/urgent-care/Pages/default.aspx&#34;&gt;UPMC Urgent Care&lt;/a&gt; center. So we went, and I got a truly painful steroid shot in the hip. It didn&amp;rsquo;t take long before I started feeling better, with relief from itching, so that I could at least sleep.&lt;/p&gt;

&lt;p&gt;I decided that Dick Wall&amp;rsquo;s advice of not failing repeatedly applied to me. I have failed late and too many times by not going to a doctor earlier. I have reasons (some really terrible experiences with doctors earlier in my life who really botched things up big time, and also I generally don&amp;rsquo;t like getting shots or drugs), but reason has to kick in. I should have gone to a doctor last week when I started having real problems, or even better, gotten my neck rash checked out three weeks ago when it first appeared. I don&amp;rsquo;t like to admit my stupidity and stubbornness, but this is &amp;ldquo;honest communication&amp;rdquo;. I am publicly admitting that I made my own life miserable for weeks, as well as Abby&amp;rsquo;s, and also my fellow conference attendees who had to put up with my marred appearance and energy level (when I explained I wasn&amp;rsquo;t feeling well, people admitted to not wanting to ask me what was up with my neck and skin in general). It wasn&amp;rsquo;t reasonable for me to resist seeking immediate medical attention, and in the future, I will not only use this as a specific learning experience (check myself after any bites or rashes, and immediately have all affected clothing items washed), but a more general one about admitting failure early rather than hoping something going bad with my body will just get better.&lt;/p&gt;

&lt;p&gt;I have had a habit of pushing myself too hard (really messing up not only my &lt;a href=&#34;../../blog/2013/04/20/on-overtraining-and-feeling-injured-two-weeks-before-the-pittsburgh-marathon/&#34;&gt;Pittsburgh Marathon&lt;/a&gt;, but also a &lt;a href=&#34;../../blog/2012/06/03/a-totally-exhausting-rachel-carson-trail-challenge-goal-training-hike/&#34;&gt;Rachel Carson Trail hike&lt;/a&gt; where if I had not been so fatigued, I would have paid more attention to plants brushing against me or the like, and even my 9-mile run last Saturday that proved too taxing given my incomplete recovery from both of those. Pushing too hard is just stupid, and I know it. What&amp;rsquo;s the worst thing: doing something stupid even though you know it; at least if you don&amp;rsquo;t know it, you can be forgiven.&lt;/p&gt;

&lt;h3 id=&#34;update-of-2013-06-02&#34;&gt;(Update of 2013-06-02)&lt;/h3&gt;

&lt;p&gt;The next day, I was feeling much better, but it&amp;rsquo;s clear that full recovery will take a while. I will continue taking steroid pills and applying steroid cream as needed to relieve the itching. I hope that in two weeks I&amp;rsquo;ll be all good again!&lt;/p&gt;

&lt;h3 id=&#34;update-of-2014-06-05&#34;&gt;(Update of 2014-06-05)&lt;/h3&gt;

&lt;p&gt;A year later, I reviewed this post just before my third Pittsburgh TechFest, in 2014, where I am to give another presentation.&lt;/p&gt;

&lt;p&gt;It turned out that my health suffered tremendously for &lt;em&gt;months&lt;/em&gt;. I reported on that &lt;a href=&#34;../../blog/2013/08/10/emerging-from-my-three-months-of-illness-self-pitying-and-self-loathing/&#34;&gt;in August 2013&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;If you&amp;rsquo;ve attended Pittsburgh TechFest or will do so this year, I&amp;rsquo;d like to hear your thoughts about what you&amp;rsquo;ve learned and used, or hope to!&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>The start of a local Haskell study group</title>
      <link>http://franklinchen.com/blog/2012/11/05/the-start-of-a-local-haskell-study-group/</link>
      <pubDate>Mon, 05 Nov 2012 09:23:00 +0000</pubDate>
      
      <guid>http://franklinchen.com/blog/2012/11/05/the-start-of-a-local-haskell-study-group/</guid>
      <description>


&lt;figure &gt;
    
        &lt;img src=&#34;http://www.haskell.org/wikiupload/4/4a/HaskellLogoStyPreview-1.png&#34; /&gt;
    
    
    &lt;figcaption&gt;
        &lt;h4&gt;Haskell logo&lt;/h4&gt;
        
    &lt;/figcaption&gt;
    
&lt;/figure&gt;


&lt;p&gt;Recently, I had a conversation with &lt;a href=&#34;http://billlaboon.com/&#34;&gt;Bill&lt;/a&gt;, who was asking about resources for learning more about functional programming. I did some serious thinking about how to advise, but eventually decided to recommend that he use the &lt;a href=&#34;http://haskell.org/&#34;&gt;Haskell&lt;/a&gt; programming language as a vehicle for getting into the theory and practice of functional programming.&lt;/p&gt;

&lt;p&gt;(To fans of &lt;a href=&#34;http://en.wikipedia.org/wiki/Standard_ML&#34;&gt;Standard ML&lt;/a&gt; or &lt;a href=&#34;http://caml.inria.fr/&#34;&gt;Caml&lt;/a&gt; or &lt;a href=&#34;http://www.scala-lang.org/&#34;&gt;Scala&lt;/a&gt; or &lt;a href=&#34;http://clojure.org/&#34;&gt;Clojure&lt;/a&gt; or &lt;a href=&#34;http://racket-lang.org/&#34;&gt;Racket&lt;/a&gt; or other languages: I will explain my rationale later.)&lt;/p&gt;

&lt;p&gt;Also, I recommended a particular tutorial as a decent starting point: a book available online called &lt;a href=&#34;http://learnyouahaskell.com/&#34;&gt;&amp;ldquo;Learn You a Haskell for Great Good!&amp;rdquo;&lt;/a&gt; (seriously).&lt;/p&gt;

&lt;p&gt;As &lt;a href=&#34;http://billlaboon.com/learning-myself-a-haskell-for-great-good/&#34;&gt;Bill got going&lt;/a&gt; and &lt;a href=&#34;http://www.chrisumbel.com/&#34;&gt;Chris&lt;/a&gt; joined us, Bill set up a Google Group to make discussion easier. If you&amp;rsquo;re interested in joining the study group, let us know!&lt;/p&gt;

&lt;h2 id=&#34;a-project-setup&#34;&gt;A project setup&lt;/h2&gt;

&lt;p&gt;Meanwhile, one of my first suggestions so far to the participants has been to get a decent serious development setup beyond just using the REPL for experimentation. In particular, as a proponent of &lt;a href=&#34;http://en.wikipedia.org/wiki/Test-driven_development&#34;&gt;Test-Driven Development&lt;/a&gt;, I believe that anyone learning a new programming language should be given the tools to immediately get a serious process going, even if only to solve trivial problems.&lt;/p&gt;

&lt;p&gt;Since &lt;a href=&#34;http://projecteuler.net/&#34;&gt;Project Euler&lt;/a&gt; was brought up as a source of little programming exercises to solve, I decided to create a project structure with (currently) one solved problem and a test file using &lt;a href=&#34;http://hunit.sourceforge.net/&#34;&gt;HUnit&lt;/a&gt; and &lt;a href=&#34;http://batterseapower.github.com/test-framework/&#34;&gt;test-framework&lt;/a&gt; as a template one can use to set up a complete development process.&lt;/p&gt;

&lt;p&gt;Here&amp;rsquo;s the link to my &lt;a href=&#34;http://github.com/FranklinChen/project-euler-haskell&#34;&gt;&lt;code&gt;project-euler-haskell&lt;/code&gt; on GitHub&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Comments and participation are welcome!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Free course review: Software Engineering for Software as a Service (Part I), from Coursera</title>
      <link>http://franklinchen.com/blog/2012/04/13/free-course-review-software-engineering-for-software-as-a-service-part-i-from-coursera/</link>
      <pubDate>Fri, 13 Apr 2012 21:29:00 +0000</pubDate>
      
      <guid>http://franklinchen.com/blog/2012/04/13/free-course-review-software-engineering-for-software-as-a-service-part-i-from-coursera/</guid>
      <description>&lt;p&gt;So after putting quite a bit of time, from February 20 to March 23, into the free Coursera course &lt;a href=&#34;http://www.saas-class.org/&#34;&gt;&amp;ldquo;Software Engineering for Software as a Service (Part I)&amp;rdquo;&lt;/a&gt;, I just received my &amp;ldquo;Statement of Accomplishment&amp;rdquo;:&lt;/p&gt;

&lt;blockquote&gt;
Congratulations! You have successfully completed the free online offering of Software Engineering for Software as a Service (Part I), offered February to April, 2012. To successfully complete this free online class, students were required to watch lectures, complete quizzes, and do weekly assignments.
&lt;/blockquote&gt;

&lt;p&gt;My review:&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h2 id=&#34;mooc-explosion&#34;&gt;MOOC explosion&lt;/h2&gt;

&lt;p&gt;Just half a year ago, in the fall of 2011, my life was &lt;em&gt;radically altered&lt;/em&gt; by the introduction of free massive open online courses (&lt;a href=&#34;http://en.wikipedia.org/wiki/Massive_open_online_course&#34;&gt;MOOCs&lt;/a&gt;). Eager to learn new skills and ideas of all kinds, I jumped into enrolling in a whole bunch of them.&lt;/p&gt;

&lt;p&gt;I went crazy, actually: I took a very heavy load, enrolling in and completing two Stanford MOOCs while doing everything else I was doing:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;../../blog/2012/01/11/experiment-in-learning-completing-stanford-online-course-introduction-to-databases/&#34;&gt;Introduction to Databases&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../../blog/2012/01/12/experiment-in-learning-completing-stanford-online-course-machine-learning/&#34;&gt;Machine Learning&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These two courses each lasted for two months, starting in early October and ending in mid-December of 2011.&lt;/p&gt;

&lt;p&gt;This spring of 2012, I went crazy again and took a very heavy load of two MOOCs, through Coursera:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Software Engineering for Software as a Service (Part I) (discussed here)&lt;/li&gt;
&lt;li&gt;Model Thinking&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;update-on-model-thinking&#34;&gt;(Update on Model Thinking)&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;../../blog/2012/06/16/review-of-coursera-course-model-thinking/&#34;&gt;An incomplete review of Model Thinking.&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;why-did-i-take-this-course&#34;&gt;Why did I take this course?&lt;/h2&gt;

&lt;p&gt;I signed up for this course in February because I was curious about &lt;a href=&#34;http://rubyonrails.org/&#34;&gt;Ruby on Rails&lt;/a&gt;. I have not done much Web development since the old days of Perl, so I decided to update my skills in this area, which is not what I do in my current job. Also, although I have used some Ruby at my job, I felt that the course would help me deepen my understanding of the language.&lt;/p&gt;

&lt;p&gt;Also, this course was advertised as not being about Rails so much as about &amp;ldquo;software engineering&amp;rdquo; using the concept of &amp;ldquo;software as a service&amp;rdquo; as a concrete domain. So I was interested in getting my hands dirty in adopting the instructors&amp;rsquo; &amp;ldquo;opinionated&amp;rdquo; idea of an &amp;ldquo;Agile&amp;rdquo; &amp;ldquo;software engineering&amp;rdquo; process for development.&lt;/p&gt;

&lt;h2 id=&#34;materials&#34;&gt;Materials&lt;/h2&gt;

&lt;p&gt;Lectures on video were provided. I found them useful but fairly poor in production qualities (sound problems and quite a few in-video quiz glitches). I understand that the instructors may improve these materials, for future offerings of the course, after the scramble of getting everything together for the first trial run of this course!&lt;/p&gt;

&lt;p&gt;Somewhat controversially, the instructors&amp;rsquo; &lt;a href=&#34;http://beta.saasbook.info/&#34;&gt;textbook that was still in rough alpha condition&lt;/a&gt; was recommended for the course. Originally I wasn&amp;rsquo;t going to buy it, but I found references from the course that made it sound like it would be useful, so I bought it. It was rather poorly formatted and repeated a lot that was already in the lecture videos and slides, but did have additional material. The book was inexpensive enough that its flaws did not annoy me excessively. (Eventually the book finally entered beta!)&lt;/p&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;http://sites.google.com/site/longlastingsoftware/_/rsrc/1366223530547/config/cover.jpg&#34; /&gt;
    
    
    &lt;figcaption&gt;
        &lt;h4&gt;Book cover&lt;/h4&gt;
        
    &lt;/figcaption&gt;
    
&lt;/figure&gt;


&lt;p&gt;Confusingly, we were also to watch the &lt;a href=&#34;http://screencast.saasbook.info/&#34;&gt;videos for the book&lt;/a&gt;. Having course material spread out like this was annoying.&lt;/p&gt;

&lt;p&gt;We were told that the course was going to cover about half of the book, and that there might be a second online course offered at some point, to finish the book.&lt;/p&gt;

&lt;h2 id=&#34;coursework&#34;&gt;Coursework&lt;/h2&gt;

&lt;p&gt;There were quizzes. I experienced glitches in dealing with them. For example, in one of the quizzes, the timer ran down because I started it but then had to attend to something (I was at home in the evening then). When I went back, I couldn&amp;rsquo;t retake the quiz, so I got no credit for anything! It was upsetting, but then again, my goal was to learn, not to get a perfect score in this class. Also, sometimes when I got an answer wrong on a quiz, there was no feedback about what I did wrong! This was quite annoying. The quiz system needs to be significantly improved.&lt;/p&gt;

&lt;p&gt;The programming assignments were the heart of the course. They sometimes took quite a long time to complete. There were several reasons for this.&lt;/p&gt;

&lt;p&gt;One was just that Rails is big, and in learning to actually write and deploy Rails applications, I had to get familiar with the online documentation to search for Rails methods to use. Another was the use of Cucumber. It took forever to run Cucumber tests. From reading various online Rails tutorials and articles about testing, it appeared to me that the course instructors&amp;rsquo; testing methodology was suspect, but who was I to complain, since I was just learning all this stuff myself?&lt;/p&gt;

&lt;p&gt;That leads to the main problem, which is that of spaghetti code: the &amp;ldquo;Rotten Potatoes&amp;rdquo; app that we modified incrementally had logic spread out all over the place. It was very difficult for me to understand what happened where, and what could happen or could not. There were code paths that involved implicit changes of state and hacking in routes and actions. It all felt wrong. Also, I strongly favor statically typed languages, and using Ruby was rather painful for me: you pull attributes out from thin air, stick them into the controller, and then suddenly you have to know you can use them in the view, etc.&lt;/p&gt;

&lt;h2 id=&#34;what-i-learned&#34;&gt;What I learned&lt;/h2&gt;

&lt;p&gt;I learned a huge amount, actually. This was the first time I&amp;rsquo;d systematically work through developing an application from the ground up using &lt;a href=&#34;http://en.wikipedia.org/wiki/Test-driven_development&#34;&gt;Test-Driven Development&lt;/a&gt; (TDD) and &lt;a href=&#34;http://en.wikipedia.org/wiki/Behavior-driven_development&#34;&gt;Behavior-Driven Development&lt;/a&gt;, for example. &lt;strong&gt;I am completely sold on TDD and BDD now.&lt;/strong&gt; It was very useful writing down, in code, scenarios to expect to happen or not happen, before implementing the behavior. I have issues with Cucumber, the tool, but the process itself, I am sold on.&lt;/p&gt;

&lt;p&gt;It was also very satisfying incrementally developing a Rails application that actually did something.&lt;/p&gt;

&lt;p&gt;And it was also useful gaining experience using Git and Heroku.&lt;/p&gt;

&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;Despite rough patches in the course (that I hope will be remedied in a future offering), I found that I learned a lot. I would definitely recommend this course to anyone interested in gaining experience incrementally developing an application, and certainly if desiring to get started with Ruby and Rails.&lt;/p&gt;

&lt;p&gt;I hope there will be a part two of this course offered, to complete the material from the Berkeley course.&lt;/p&gt;

&lt;h3 id=&#34;update-of-2013-12-13&#34;&gt;(Update of 2013-12-13)&lt;/h3&gt;

&lt;p&gt;It&amp;rsquo;s been almost two years since I took this course, during which I have not done anything with Rails since, although I have started experimenting with using &lt;a href=&#34;http://www.playframework.com/&#34;&gt;Play&lt;/a&gt; for &lt;a href=&#34;http://www.scala-lang.org/&#34;&gt;Scala&lt;/a&gt;, which is similar in spirit.&lt;/p&gt;

&lt;p&gt;Meanwhile, this course has moved off Coursera to the &lt;a href=&#34;http://www.edx.org/&#34;&gt;edX&lt;/a&gt; MOOC platform. &lt;a href=&#34;http://www.edx.org/course/uc-berkeleyx/uc-berkeleyx-cs-169-2x-software-service-1005&#34;&gt;Part 2 was offered in August 2013&lt;/a&gt; and a revised version of &lt;a href=&#34;http://www.edx.org/course/uc-berkeleyx/uc-berkeleyx-cs169-1x-software-service-1136&#34;&gt;part 1 was offered in September 2013&lt;/a&gt;: &amp;ldquo;The presentation order and amount of time spent on some material is being changed in response to feedback from both on-campus and online students. This run of the class also includes all new videos, two new homeworks and all new exam questions. The new class also includes embedded live chat with Teaching Assistants and other students and opportunities for remote pair programming with other students. Group tutorial Q&amp;amp;A sessions will also be held and broadcast live through Google Hangouts and YouTube.&amp;rdquo;&lt;/p&gt;

&lt;p&gt;I presume both parts of the course will continue to be offered in the future. I would like to take part 2 at some point, but that depends on what time I can devote to it.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Global Day of CodeRetreat: Pittsburgh</title>
      <link>http://franklinchen.com/blog/2011/12/06/global-day-of-coderetreat-pittsburgh/</link>
      <pubDate>Tue, 06 Dec 2011 21:24:00 +0000</pubDate>
      
      <guid>http://franklinchen.com/blog/2011/12/06/global-day-of-coderetreat-pittsburgh/</guid>
      <description>&lt;p&gt;As I mentioned &lt;a href=&#34;../../blog/2011/12/04/why-i-am-writing-this-week-for-csedweek/&#34;&gt;on Sunday in introducing CSEdWeek&lt;/a&gt;, Saturday was the ambitious &lt;a href=&#34;http://blog.coderetreat.com/global-day-of-coderetreat&#34;&gt;Global Day of CodeRetreat&lt;/a&gt;, whose local &lt;a href=&#34;http://globalcoderetreat2011pittsburgh.eventbrite.com/&#34;&gt;Pittsburgh edition&lt;/a&gt; I participated in, with around 50 of us total. The global event was held simultaneously in 90 cities and had around 2000 attendees. I had a great time, although I was totally exhausted by the time it was over (it lasted from before 9 AM to after 6 PM; what a way to spend a Saturday!).&lt;/p&gt;

&lt;p&gt;What is CodeRetreat and what can you get out of it as a software developer?&lt;/p&gt;

&lt;p&gt;
&lt;figure &gt;
    
        &lt;img src=&#34;../../images/global-day-of-coderetreat/code-retreat-start.jpg&#34; /&gt;
    
    
    &lt;figcaption&gt;
        &lt;h4&gt;Pittsburgh CodeRetreat starting&lt;/h4&gt;
        
    &lt;/figcaption&gt;
    
&lt;/figure&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;../../images/global-day-of-coderetreat/code-retreat-start-2.jpg&#34; /&gt;
    
    
    &lt;figcaption&gt;
        &lt;h4&gt;Pittsburgh CodeRetreat starting&lt;/h4&gt;
        
    &lt;/figcaption&gt;
    
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h2 id=&#34;the-coderetreat-concept&#34;&gt;The CodeRetreat concept&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://coderetreat.org/&#34;&gt;CodeRetreat&lt;/a&gt; is the brainchild of &lt;a href=&#34;http://coreyhaines.com/&#34;&gt;Corey Haines&lt;/a&gt;. The motto is &amp;ldquo;Programmers honing their craft together.&amp;rdquo; The basic idea is the programmers gather for an all-day event in which they pair up with different partners for six sessions to work again and again on the same problem, starting from scratch each time. You can read about more &lt;a href=&#34;http://coderetreat.org/about&#34;&gt;formal details&lt;/a&gt;, but I didn&amp;rsquo;t before I went to the event, and in this post I will walk through my experience as a first-time participant.&lt;/p&gt;

&lt;p&gt;If CodeRetreat already sounds weird, it&amp;rsquo;s because it is. I had heard about it earlier from a couple of people I&amp;rsquo;d met at the &lt;a href=&#34;http://www.pghgeekoutday.com/&#34;&gt;Pittsburgh Geek Out Day&lt;/a&gt; sessions who had gone to such events in the past. To be completely honest, the first time I heard about it, it sounded weird. And the second time, after hearing about the session held in Pittsburgh in May when I was out of town, it sounded weird too.  But I&amp;rsquo;m the kind of person who is willing to try weird things if I don&amp;rsquo;t believe they can be actively harmful and have a chance of being very beneficial.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m going to state up front that if you are a programmer and haven&amp;rsquo;t been to a CodeRetreat, and one is happening in your area, you should try it out.&lt;/p&gt;

&lt;h2 id=&#34;morning-introduction&#34;&gt;Morning introduction&lt;/h2&gt;

&lt;p&gt;I arrived before 8:30 AM, in time for taking a seat at a table and doing some socializing over coffee and donuts/bagels.  &lt;strong&gt;Socializing is one of the big reasons to go to an event like this; I had never been in a room of fifty local developers from all kinds of domain and programming language backgrounds.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We were told that our task was to implement &lt;a href=&#34;http://en.wikipedia.org/wiki/Conway&#39;s_Game_of_Life&#34;&gt;Conway&amp;rsquo;s game of life&lt;/a&gt;. Actually, we all already knew that, because we had been informed before the event. To keep myself fresh for the event, I deliberately did no thinking about the problem, working on an algorithm, or coding it. I do not know how many other people took this attitude, and am curious how it affects the nature of participation (I will discuss some speculations later in this post).&lt;/p&gt;

&lt;h2 id=&#34;first-session&#34;&gt;First session&lt;/h2&gt;

&lt;p&gt;I don&amp;rsquo;t remember what specific instructions we were given for our first session, other than to pair up. I may have been too distracted by the socializing at the time. &lt;strong&gt;It would have been useful to have received handouts to guide us.&lt;/strong&gt; I do know that at some point in the morning, before the first or second session, we were directed to look at the whiteboard that had the &amp;ldquo;four rules of simple design&amp;rdquo; written on it:&lt;/p&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;../../images/global-day-of-coderetreat/four-rules-of-simple-design&#34; /&gt;
    
    
    &lt;figcaption&gt;
        &lt;h4&gt;Four rules of simple design&lt;/h4&gt;
        
    &lt;/figcaption&gt;
    
&lt;/figure&gt;


&lt;h3 id=&#34;four-rules-of-simple-design&#34;&gt;Four rules of simple design&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Passes all tests&lt;/li&gt;
&lt;li&gt;Clear, expressive, consistent&lt;/li&gt;
&lt;li&gt;Duplicates no behavior, config&lt;/li&gt;
&lt;li&gt;Minimal methods, classes, modules&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;my-first-pairing-experience&#34;&gt;My first pairing experience&lt;/h3&gt;

&lt;p&gt;I&amp;rsquo;d heard about &lt;a href=&#34;http://en.wikipedia.org/wiki/Pair_programming&#34;&gt;pair programming&lt;/a&gt; for a decade, in the context of &lt;a href=&#34;http://en.wikipedia.org/wiki/Extreme_programming&#34;&gt;Extreme Programming (XP)&lt;/a&gt;, but had never practiced it. To be honest, as late as a year ago I found the concept very strange and distasteful. Interestingly, by this year, as a result of participating in a lot of &lt;a href=&#34;../../blog/2011/10/16/pittsburgh-software-developer-communities/&#34;&gt;local programmer group meetings&lt;/a&gt;, I became more sociable generally and more amenable to real-time sharing of ideas.  &lt;strong&gt;Part of the reason I decided to go to CodeRetreat was to experience pairing.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;For the first session, I paired with Adam, since I knew him (in fact, I had gotten him to register at the last minute for the event) and we could work together in Java.&lt;/p&gt;

&lt;p&gt;We gathered around his laptop, and spent quite a bit of time (of the allotted 45 minutes per session) sketching out a design for implementing Conway&amp;rsquo;s game of life. First we had to decide what variant of the game to implement: fixed grid with boundary or infinite? We decided on infinite. Then we had to figure out an appropriate algorithm and data representation. We came up with that. We ended up writing scaffolding for a complete application, for initializing the grid, displaying it, computing the next step, etc. Unfortunately, time expired when we were just about to implement the rules for the game.&lt;/p&gt;

&lt;p&gt;Then we were told to &lt;em&gt;delete all our code&lt;/em&gt;. That was kind of shocking. We weren&amp;rsquo;t allowed to just archive it somewhere. We had to delete it right there and then:&lt;/p&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;../../images/global-day-of-coderetreat/code-deleted&#34; /&gt;
    
    
&lt;/figure&gt;


&lt;h3 id=&#34;observations&#34;&gt;Observations&lt;/h3&gt;

&lt;p&gt;I was disappointed that we didn&amp;rsquo;t have something to show after 45 minutes. I was also shocked about having to delete our work. I felt that the infrastructure we had set up was valuable. I was confused by how what we were doing was contrary with how I would operate in real life on a real programming project. 45 minutes was not enough time to do the kinds of things I really wanted to do.&lt;/p&gt;

&lt;p&gt;Meanwhile, at some point I realized that we had violated the &amp;ldquo;rules of simple design&amp;rdquo;. We had a proliferation of interfaces and in fact we kept changing them in order to be able to compile while nearing something that could actually run.&lt;/p&gt;

&lt;h2 id=&#34;second-session&#34;&gt;Second session&lt;/h2&gt;

&lt;p&gt;I think that for the second session we were instructed to use &lt;a href=&#34;http://en.wikipedia.org/wiki/Test-driven_development&#34;&gt;test-driven development&lt;/a&gt;:&lt;/p&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;../../images/global-day-of-coderetreat/tdd-cycle.jpg&#34; /&gt;
    
    
&lt;/figure&gt;


&lt;p&gt;I looked for another Java programmer, and paired with Heath, whom I had met earlier in various events but never worked with. We had some ideas based on what we each had done in the first session and got going. This time, we used my laptop, and the first thing I did was start writing tests with &lt;a href=&#34;http://www.junit.org/&#34;&gt;JUnit&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;We made good progress, but I felt hampered by Java&amp;rsquo;s verbose syntax, and also I confess to copying and pasting test setup code just because time was short. I ended up feeling conflicted because the time constraints of this event were generating powerful perverse incentives. I think a lot of us kind of liked the idea of getting something working and done, and cut corners throughout the day. This is something that should be addressed by the CodeRetreat organizers and facilitators. After each session, many of us ended up saying, &amp;ldquo;We almost finished!&amp;rdquo; or something like that. I tried to resist having that mentality, but it was difficult given the time limit.&lt;/p&gt;

&lt;h2 id=&#34;third-session&#34;&gt;Third session&lt;/h2&gt;

&lt;p&gt;The final morning session had me pairing with a Python programmer, Joe.&lt;/p&gt;

&lt;p&gt;We were supposed to do &amp;ldquo;ping pong pairing&amp;rdquo;, which I hadn&amp;rsquo;t heard of before. The idea was to take turns being the one writing tests and being the one writing code to pass the tests.&lt;/p&gt;

&lt;p&gt;Joe and I wasted some time getting set up with Dropbox so that we could use both our laptops in order to get concurrency benefits.&lt;/p&gt;

&lt;p&gt;I started out writing tests using &lt;a href=&#34;http://docs.python.org/library/unittest.html&#34;&gt;unittest&lt;/a&gt; and Joe wrote the game implementation. It turned out we never actually ping-ponged, so we violated the intent of the session. We both got into the idea of being able to get something done. In particular, we agreed on a purely functional algorithm, which we knew would be expressible very compactly in Python.&lt;/p&gt;

&lt;p&gt;We ran into concurrency problems because we were perpetually editing source files such that I kept seeing an out of date version of his code and vice versa. &amp;ldquo;Concurrent&amp;rdquo; development using something like Git is one thing, but having one&amp;rsquo;s view of a project change underneath one&amp;rsquo;s feet is another. I don&amp;rsquo;t think the Dropbox idea worked so well, but a number of us that day independently came up with it and spread it around and used it. I now think that&amp;rsquo;s not only cheating, but it even further distances the situation from that of real life software development!&lt;/p&gt;

&lt;p&gt;Also, in the end, Joe had written a lot more code than we had tested, and I had written a lot more tests that were not yet passing. So I think the experiment didn&amp;rsquo;t work out well. We were not keeping to the TDD cycle we were supposed to keep to, in which a test is written, code is written to pass it, then another test written making the code fail, etc.&lt;/p&gt;

&lt;h2 id=&#34;lunch&#34;&gt;Lunch&lt;/h2&gt;

&lt;p&gt;For various reasons, we kept falling behind schedule in the morning, such that it was later than planned when we finally took a lunch break. We each got a nice box lunch, and I took a short nap before resuming more socialization and discussion, which was finally interrupted when we had to begin the afternoon sessions.&lt;/p&gt;

&lt;h2 id=&#34;fourth-session&#34;&gt;Fourth session&lt;/h2&gt;

&lt;p&gt;The fourth session was supposed to be &amp;ldquo;mute ping pong pairing with loophole&amp;rdquo;, in which we were not supposed to communicate except through code, and the one writing code to pass tests was supposed to be fiendish and write code that would pass the existing tests but would clearly not be the correct long-term code for the problem at hand.&lt;/p&gt;

&lt;p&gt;I paired with Chris, using Java, and we did the Dropbox thing. Unfortunately, we spent a large amount of time getting set up. We both had problems connecting to the WiFi for a while. Furthermore, we finally realized that two machines both running IntelliJ IDEA on the same project was a bad idea, because of clobbering of project state. I switched to Emacs, but then we had to rig up a script for me to be able to compile and run stuff he was generating in IntelliJ IDEA. There was just too much setup time wasted.&lt;/p&gt;

&lt;p&gt;Chris took up the test-writing duties and I proceeded to write code. This was my first time during the day to write code to pass someone else&amp;rsquo;s tests, so the experience was quite interesting. Thanks to static typing, the tests Chris wrote forced me to write various classes and methods. I did play the trick of writing degenerate code that passed one of his tests and forced him to write more tests.&lt;/p&gt;

&lt;p&gt;We ran out of time before we got to ping pong the roles. Oops. I did learn something from this &amp;ldquo;no talking about design up front&amp;rdquo; session though: tests can go a long way to drive and constrain the kinds of designs possible to solve a problem. And I was clearly not writing anything extra when focusing purely on passing the existing tests.&lt;/p&gt;

&lt;h2 id=&#34;fifth-session&#34;&gt;Fifth session&lt;/h2&gt;

&lt;p&gt;The fifth session was supposed to be &amp;ldquo;open&amp;rdquo; to however we wanted to go about implementing the game.&lt;/p&gt;

&lt;p&gt;I was paired with Demeng, who uses C#, which I have never used. It was not clear to me what we should do. Somehow, we ended up deciding to have me work on a Haskell implementation of a general design we discussed, so that he could watch and ask me questions and learn some Haskell in the process as I explained to him how to express something we wanted. Given that he was familiar with Python, I felt this was a feasible goal, and it was going quite well, actually. I would write a line of code and explain it to him, or he would tell me something to express, and I would write the code.&lt;/p&gt;

&lt;p&gt;Unfortunately, I was still not set up for production Haskell development, e.g., with a testing framework, so we had ad hoc tests.&lt;/p&gt;

&lt;h2 id=&#34;sixth-session&#34;&gt;Sixth session&lt;/h2&gt;

&lt;p&gt;The sixth session had each pair rotate to the right to work on someone&amp;rsquo;s machine and code from the fifth session.&lt;/p&gt;

&lt;p&gt;This was quite traumatic for some of us.&lt;/p&gt;

&lt;p&gt;Demeng and I got moved to a laptop with C# going. He took charge, but I felt somewhat helpless because I had to keep asking about various C# constructs, and also, the original programmers didn&amp;rsquo;t use a testing framework that made it easy to start looking at the existing tests and write more. Even worse, it was getting late and Demeng had to leave, so I was left alone trying to figure out what was going on.&lt;/p&gt;

&lt;p&gt;The pair who ended up with my Haskell code was in even worse shape. They didn&amp;rsquo;t know any Haskell, and were fairly confused and kept on asking me for help. They didn&amp;rsquo;t manage to write any code that compiled. I felt bad about having used Haskell in the fifth session without knowing that it was going to become a new pair&amp;rsquo;s legacy code!&lt;/p&gt;

&lt;h2 id=&#34;what-i-got-out-of-coderetreat&#34;&gt;What I got out of CodeRetreat&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;m not sure I got what was &amp;ldquo;intended&amp;rdquo; out of CodeRetreat, if the intent was for us to rigorously follow the guidelines and rules we were given. There were too many perverse incentives and little enforcement. Also, the frictions of different languages, IDEs, and operating systems were sometimes significant.&lt;/p&gt;

&lt;p&gt;What I mostly got out of CodeRetreat was value at a meta-level. It was a time to socialize, to meet new people and even work with them. It was a time for many participants who had yet heard about TDD and various design principles to thinking about them and give them a try. It was a time to learn about other languages and development environments, even if only at a shallow level. It was a time for exploring different algorithms and data structures for the same problem.&lt;/p&gt;

&lt;p&gt;The most concrete thing I learned was that pairing can be very stimulating and useful. CodeRetreat has made me think that I can definitely imagine pairing as a regular work practice.&lt;/p&gt;

&lt;h3 id=&#34;education-and-cs-ed-week&#34;&gt;Education and CS Ed Week&lt;/h3&gt;

&lt;p&gt;Although I think less chaos and more guidance would improve CodeRetreat, something about the whole process of getting people together and making them share is in itself a great example of learning and teaching. I&amp;rsquo;d call CodeRetreat an example of &amp;ldquo;education&amp;rdquo;, even though it is far removed from the conventional lecture hall. Nobody leaves CodeRetreat with a huge set of additional facts in the brain, but I&amp;rsquo;m sure many of us leave having experienced a taste of many ideas, shared recommendations to appropriate books and web sites to examine and study, and notions of how to change our actual practices in the real world.&lt;/p&gt;

&lt;p&gt;What does any of this have to do with CS Ed Week? I think there is tension in the educational system between those who believe it should teach fundamental (usually meaning mathematical and abstract) foundations of computing, and those who believe that students should also be prepared for the messiness and realities of the &amp;ldquo;real world&amp;rdquo;. Meanwhile, a lot of the press concerning CS Ed Week focuses on very pragmatic arguments that the US badly needs more appropriately trained employees for computing jobs.&lt;/p&gt;

&lt;p&gt;I don&amp;rsquo;t see how it is possible to really attract more young people into computing without at least helping them understand what a career in computing might entail. That requires some kind of exposure to what we actually do. It&amp;rsquo;s not enough to just teach a middle school student some kid-friendly programming language, or to teach a vocational student Java, or to teach an undergrad the details of Fibonacci heaps. The big picture is missing.&lt;/p&gt;

&lt;p&gt;Events similar to CodeRetreat could play a role in getting a lot of people exposure to the big picture. Furthermore, even many of us who already work in computing do not see the big picture, because it is so easy to get out of date once out of school and working in some narrow niche. So &amp;ldquo;continuing education&amp;rdquo; is just as important as education at K-12 or in undergrad or grad school.&lt;/p&gt;

&lt;h2 id=&#34;concerns-about-coderetreat&#34;&gt;Concerns about CodeRetreat&lt;/h2&gt;

&lt;p&gt;It&amp;rsquo;s not clear to me that Conway&amp;rsquo;s game of life is such a good topic. It&amp;rsquo;s not very much like typical programming tasks. In fact, my mind wandered toward thinking about clever ideas for preprocessing, compilation, parallelization, and memoization that I&amp;rsquo;m not sure I would want to work on with someone for 45 minutes. I brought up this concern at lunch but was told that the task always remains the same because it serves its purpose, it works, and consistency is important.&lt;/p&gt;

&lt;p&gt;There needs to be a way to help us resist perverse incentives to finish an app.&lt;/p&gt;

&lt;p&gt;We should be better prepared to cope with different languages and development environments.&lt;/p&gt;

&lt;h2 id=&#34;will-i-attend-the-next-coderetreat-in-pittsburgh&#34;&gt;Will I attend the next CodeRetreat in Pittsburgh?&lt;/h2&gt;

&lt;p&gt;I have to confess that I do not know whether I will decide it worthwhile to go to another one. It&amp;rsquo;s too early to think about that, although Jim Hurne has already set February 25 as the date for the next one! I still have to fully digest what I experienced, make use of it, and then think about how I would maximally benefit from and contribute to another CodeRetreat.&lt;/p&gt;

&lt;h2 id=&#34;thank-you&#34;&gt;Thank you!&lt;/h2&gt;

&lt;p&gt;Thank you, Vivisimo and M*Modal, for being sponsors and hosts for the event.&lt;/p&gt;

&lt;p&gt;Thanks you, &lt;a href=&#34;http://twitter.com/jthurne&#34;&gt;Jim Hurne&lt;/a&gt;, for putting so much work into not only the Pittsburgh event, but more broadly, the global one.&lt;/p&gt;

&lt;p&gt;Thanks you, &lt;a href=&#34;http://twitter.com/coxandrew&#34;&gt;Andrew Cox&lt;/a&gt; and &lt;a href=&#34;http://twitter.com/josephrkramer&#34;&gt;Joseph Kramer&lt;/a&gt;, for acting as facilitators all day  (Andrew has written up a detail account of his experience on Saturday as a &lt;a href=&#34;http://andrewcox.org/post/13810557640/coderetreat-a-first-time-facilitators-perspective&#34;&gt;facilitator&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Thank you, Adam, Heath, Joe, Chris, Demeng, for pairing with me.&lt;/p&gt;

&lt;p&gt;And thanks to everyone else who was at CodeRetreat.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>