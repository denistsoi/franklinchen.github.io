<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Education on Franklin Chen</title>
    <link>http://franklinchen.com/categories/education/atom/index.xml</link>
    <description>Recent content in Education on Franklin Chen</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="http://franklinchen.com/categories/education/atom/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>How to respond if a child asks you a science question you don&#39;t know the answer to</title>
      <link>http://franklinchen.com/blog/2012/01/19/how-to-respond-if-a-child-asks-you-a-science-question-you-dont-know-the-answer-to/</link>
      <pubDate>Thu, 19 Jan 2012 22:28:00 +0000</pubDate>
      
      <guid>http://franklinchen.com/blog/2012/01/19/how-to-respond-if-a-child-asks-you-a-science-question-you-dont-know-the-answer-to/</guid>
      <description>&lt;p&gt;Today, I was very sad to see a news article &lt;a href=&#34;http://www.bbc.co.uk/news/education-16612100&#34;&gt;&lt;strong&gt;Children&amp;rsquo;s science questions &amp;ldquo;stump many parents&amp;rdquo;&lt;/strong&gt;&lt;/a&gt;. I was &lt;em&gt;not&lt;/em&gt; sad for any of the following reasons:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Oh no, kids these days are receiving a poor science education!&lt;/li&gt;
&lt;li&gt;Oh no, the parents received a poor science education when they were young!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I was sad because of many of the parents&amp;rsquo; reactions to their children&amp;rsquo;s questions:&lt;/p&gt;

&lt;blockquote&gt;
...16% told their children to ask their partner and a fifth made up a response or pretended that no one knew the answer.
&lt;/blockquote&gt;

&lt;p&gt;What are some better alternative responses?&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h2 id=&#34;the-first-step-to-acting-like-a-scientist-not-knowing&#34;&gt;The first step to acting like a scientist: not knowing&lt;/h2&gt;

&lt;p&gt;One obvious response that is already by itself profoundly adequate would be to say &lt;strong&gt;&amp;ldquo;I don&amp;rsquo;t know&amp;rdquo;&lt;/strong&gt;. So easy, so honest, yet many parents refused to use this response. But a parent who replied even in only this minimalist way would be teaching some very important lessons about science:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Science begins with &lt;em&gt;not knowing&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;Science is about being &lt;em&gt;honest&lt;/em&gt; about reality and about oneself; it is about deliberately restricting one&amp;rsquo;s ego, recognizing one&amp;rsquo;s limitations, and acknowledging ignorance.&lt;/li&gt;
&lt;li&gt;Science proceeds with &lt;em&gt;asking&lt;/em&gt;. The child by asking should be commended for asking, rather than implicitly punished or evaded for possibly embarrassing the parent.&lt;/li&gt;
&lt;li&gt;Science proceeds with &lt;em&gt;trying&lt;/em&gt; to find out.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;the-second-step-to-acting-like-a-scientist-looking-for-an-answer&#34;&gt;The second step to acting like a scientist: looking for an answer&lt;/h2&gt;

&lt;p&gt;Regarding trying to find out, here is another quote from the article:&lt;/p&gt;

&lt;blockquote&gt;
About a third of parents said they actively researched answers to their children&#39;s inquiries. 
&lt;/blockquote&gt;

&lt;p&gt;It would be possible to stop here and praise these parents.&lt;/p&gt;

&lt;p&gt;But as phrased, this response is not satisfactory either:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Science is not about looking up an &lt;em&gt;answer&lt;/em&gt; somewhere, as one might look up a baseball statistic.&lt;/li&gt;
&lt;li&gt;How involved were the children in obtaining the &amp;ldquo;answer&amp;rdquo;? Did the parents fetch the &amp;ldquo;answer&amp;rdquo; and hand it over? Or did the children get actively involved in looking for the answer?&lt;/li&gt;
&lt;li&gt;Science is not about sitting back and getting an answer from someone.&lt;/li&gt;
&lt;li&gt;Science is not really about answers at all. It is a &lt;em&gt;mindset&lt;/em&gt;, a &lt;em&gt;process&lt;/em&gt; of looking for an answer, and looking for ways to evaluate possible answers for adequacy and some measure of confidence. It is above all a &lt;em&gt;way of life&lt;/em&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;the-third-step-to-acting-like-a-scientist-being-wrong&#34;&gt;The third step to acting like a scientist: being wrong&lt;/h2&gt;

&lt;p&gt;Sometimes one settles on an answer, and then later decides it is unsatisfactory. What then?&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Science is not about being right.&lt;/li&gt;
&lt;li&gt;Science is often about saying &lt;strong&gt;&amp;ldquo;I was wrong&amp;rdquo;&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;the-third-step-to-acting-like-a-scientist-uncertainty&#34;&gt;The third step to acting like a scientist: uncertainty&lt;/h2&gt;

&lt;p&gt;Eventually even the notion of &amp;ldquo;answer&amp;rdquo; must be considered flawed. We are never &lt;em&gt;certain&lt;/em&gt; about our theories. Our theories are based on &lt;em&gt;models&lt;/em&gt; that we invent. The models can have explanatory or predictive power or practical applications, but they themselves are transient. The scientific models from two centuries ago are very different from the scientific models of thirty years ago, and the scientific models of today are very different from the scientific models of thirty years ago. What we believed to be the &amp;ldquo;answer&amp;rdquo; thirty years ago looks today to have been an error.&lt;/p&gt;

&lt;p&gt;And unless we believe that we are near the &amp;ldquo;end of science&amp;rdquo; (I do not believe this for a moment), we must also take into consideration the plausibility that thirty years from now, we will laugh at the currently favored scientific models of today the way we laugh at the hair and clothing styles of the 1980s.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Science is about saying &lt;strong&gt;&amp;ldquo;I am not sure&amp;rdquo;&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;The best thing that everyone could learn about science, whether one is young or old, child or parent, is what its true nature is: a way of thinking, a way of acting, a way of living. It is not about &amp;ldquo;facts&amp;rdquo; to accumulate, or jargon to memorize.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>How school made me hate computer science and programming</title>
      <link>http://franklinchen.com/blog/2012/01/16/how-school-made-me-hate-computer-science-and-programming/</link>
      <pubDate>Mon, 16 Jan 2012 19:57:00 +0000</pubDate>
      
      <guid>http://franklinchen.com/blog/2012/01/16/how-school-made-me-hate-computer-science-and-programming/</guid>
      <description>&lt;p&gt;Some months ago, when the legendary computer scientist &lt;a href=&#34;http://en.wikipedia.org/wiki/John_McCarthy_(computer_scientist)&#34;&gt;John McCarthy&lt;/a&gt; died, I wrote a blog post in which I briefly reminisced about the way &lt;a href=&#34;../../blog/2011/10/25/rip-john-mccarthy-but-lisp-will-never-die/&#34;&gt;I hated computer programming before I came to love it&lt;/a&gt;. Today I am filling in some more details about how school (elementary school through college) made me fear, misunderstand, and hate computer science and programming. I am inspired to do this because&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Just a few weeks ago, I came across an old article from 1992 by someone who had a similar experience, and I wanted to complete my story. Although my story also goes back more than two decades, I feel that the same fundamental stumbling blocks exist to &lt;a href=&#34;../../blog/2011/12/09/why-everyone-should-learn-computer-science/&#34;&gt;the universal computational competence that I now advocate&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;The topic of learning &amp;ldquo;coding&amp;rdquo; has exploded into the popular media, with hundreds of thousands of people having signed up for &lt;a href=&#34;http://codeyear.com/&#34;&gt;Code Year&lt;/a&gt; and even New York Mayor Bloomberg stating that &lt;a href=&#34;http://www.businessinsider.com/mike-bloomberg-pledges-to-learn-to-code-on-codecademy-this-year-2012-1&#34;&gt;he has signed up&lt;/a&gt; for the free &lt;a href=&#34;http://codecademy.com/&#34;&gt;Codecademy&lt;/a&gt; online tutorial courses.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;My goals in telling my story:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;I want to raise awareness among those who might this year be jumping into &amp;ldquo;coding&amp;rdquo; that they might encounter the same kinds of stumbling blocks that discouraged me at first, so that they don&amp;rsquo;t prematurely jump to such conclusions as &amp;ldquo;programming is boring and confusing&amp;rdquo; or &amp;ldquo;programming requires special talent I don&amp;rsquo;t have&amp;rdquo;.&lt;/li&gt;
&lt;li&gt;I want for educators to take note of the barriers facing students who may not be &amp;ldquo;naturals&amp;rdquo; to understanding computation or writing computer programs in the context of currently common programming environments.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In a forthcoming article, I will engage in a severe critique of the &lt;a href=&#34;http://codecademy.com/&#34;&gt;Codeacademy&lt;/a&gt; lessons I have so far examined and gone through, while helping my wife learn programming from scratch.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h2 id=&#34;6th-grade-and-basic-in-the-early-1980s&#34;&gt;6th grade and BASIC in the early 1980s&lt;/h2&gt;

&lt;p&gt;When I was in middle school in the 6th grade, my math teacher was crazy about computers. He was convinced that his best math students, including me, should learn computer programming. I was basically coerced into staying after school for sessions in which he taught us to program in BASIC for the &lt;a href=&#34;http://en.wikipedia.org/wiki/TRS-80&#34;&gt;TRS-80 microcomputer&lt;/a&gt;. The BASIC language was very primitive. We used line numbers and &lt;code&gt;GOTO&lt;/code&gt;. Some boys got totally into programming, and tried writing video games. I was not one of them. I was not a natural at programming. I will admit it: I never really understood &lt;code&gt;GOSUB&lt;/code&gt; or &lt;code&gt;PEEK&lt;/code&gt; or &lt;code&gt;POKE&lt;/code&gt; at the time. In fact, one beautiful spring day, since it was nice outside, I decided to simply walk home from school instead of staying around for his class. After missing a couple of sessions, I was shocked that he contacted my parents and basically made me continue on. I finished out the year, then never wrote a BASIC program again (until college).&lt;/p&gt;

&lt;p&gt;I did like playing computer games, however. I just had no interest in making them.&lt;/p&gt;

&lt;h2 id=&#34;7th-grade-and-pac-man&#34;&gt;7th grade and Pac-Man&lt;/h2&gt;

&lt;p&gt;In the 7th grade, I was crazy about video games and my sister and I managed to save enough allowance money to buy an &lt;a href=&#34;http://en.wikipedia.org/wiki/Atari_2600&#34;&gt;Atari 2600&lt;/a&gt; video game console. I had encountered an IBM PC by then, but had no interest in it.&lt;/p&gt;

&lt;h2 id=&#34;9th-grade-and-my-first-programming-class&#34;&gt;9th grade and my first programming class&lt;/h2&gt;

&lt;p&gt;When I started high school in the 9th grade, there was a requirement that all students take a semester of &amp;ldquo;computer literacy&amp;rdquo;. After several meetings of that class, I wanted out. We were shown slides of tape drives, told about bits and bytes, and I had no interest whatsoever in any of that. I heard that there was a way out of the requirement, which was to take an actual computer programming class. Since my father was working as a mainframe programmer (his degree in information sciences being from the 1970s), he suggested I take &lt;a href=&#34;http://en.wikipedia.org/wiki/COBOL&#34;&gt;COBOL&lt;/a&gt;, which were offered by my high school (in addition to &lt;a href=&#34;http://en.wikipedia.org/wiki/Fortran&#34;&gt;Fortran&lt;/a&gt; and &lt;a href=&#34;http://en.wikipedia.org/wiki/IBM_RPG&#34;&gt;RPG&lt;/a&gt; and probably others I don&amp;rsquo;t remember).&lt;/p&gt;

&lt;p&gt;I switched to the COBOL class. Here we learned about pseudocode, used &lt;a href=&#34;http://www.retroist.com/2009/01/11/ibm-flowcharting-template/&#34;&gt;flowchart templates&lt;/a&gt; to draw symbols on paper, wrote our programs out in pencil, and used the big keypunch machine to punch out our programs. Every day we had the opportunity to submit a punch card deck to the teacher (with the appropriate job control and compiler cards) to drop off for overnight processing at some mainframe somewhere.&lt;/p&gt;

&lt;p&gt;I hated the class. The whole rigid process we were supposed to go through, the verbosity of the COBOL language, and the nature of the programs we wrote, made computing seem very boring. I started not doing any homework, and after several weeks, I was failing the class, and the teacher called my parents.&lt;/p&gt;

&lt;p&gt;I dutifully caught up on all the missing programming projects, got my A in the class, and then never touched COBOL again, and forgot any COBOL I &lt;em&gt;pretended&lt;/em&gt; to learn while basically copying and pasting from example programs in the textbook and modifying stuff until it &amp;ldquo;worked&amp;rdquo;. I have a confession to make: despite my A in the class, I never really understood COBOL or programming. I was just going through the motions. It was truly &lt;a href=&#34;http://en.wikipedia.org/wiki/Cargo_cult_programming&#34;&gt;&lt;em&gt;cargo-cult programming&lt;/em&gt;&lt;/a&gt;. &lt;strong&gt;This is a warning to all educators to actually verify whether someone has learned something, as opposed to cleverly faked it!&lt;/strong&gt; (I will come to this subject again.)&lt;/p&gt;

&lt;h2 id=&#34;10th-grade-and-pascal&#34;&gt;10th grade and Pascal&lt;/h2&gt;

&lt;p&gt;In the 10th grade (in a new high school), my math teacher made it mandatory to write some rudimentary programs in Pascal to illustrate the trigonometry and other stuff we were learning. We used the MacPascal interpreter on the Macintosh for this purpose: there was a computer lab where we did our work and printed out our programs and results. I have almost no memory of any of this except that I was intrigued by the automatic formatting and the proportional fonts in MacPascal.&lt;/p&gt;

&lt;p&gt;I should note that at this time in my life, I had no interest in computers. We still did not have one at home, and I had long since outgrown the Atari video game console.&lt;/p&gt;

&lt;h2 id=&#34;11th-grade-and-advanced-placement-computer-science&#34;&gt;11th grade and Advanced Placement computer science&lt;/h2&gt;

&lt;p&gt;In the 11th grade, I had the opportunity to take an Advanced Placement course in computer science, taught using the &lt;a href=&#34;http://en.wikipedia.org/wiki/Pascal_(programming_language)&#34;&gt;Pascal&lt;/a&gt; programming language. (I mentioned this in &lt;a href=&#34;../../blog/2011/10/25/rip-john-mccarthy-but-lisp-will-never-die/&#34;&gt;my previous article&lt;/a&gt;.)&lt;/p&gt;

&lt;p&gt;I signed up for the class. You might wonder why, given that I had no interest in computers or programming (in Pascal or any other language). I had a perverse incentive. Advanced Placement courses were advertised as a way to get out of equivalent courses in college. I figured that if I ended up in college with a computing course requirement, I wanted to place out of it! So I signed up for Advanced Placement computer science because I &lt;em&gt;hated&lt;/em&gt; computers and wanted to get the pain over with earlier rather than later.&lt;/p&gt;

&lt;p&gt;The course was taught by a math teacher who made us use as a textbook a book that I found totally over my head, &lt;a href=&#34;http://www.amazon.com/Solve-Computer-Prentice-Hall-International-Science/dp/0134340019&#34;&gt;&amp;ldquo;How to Solve It by Computer&amp;rdquo;&lt;/a&gt;. I&amp;rsquo;m betting that if I had a copy of this book now to look at, I might actually enjoy it, but at the time, it was forbidding. It was all about &lt;a href=&#34;http://en.wikipedia.org/wiki/Loop_invariant&#34;&gt;loop invariants&lt;/a&gt;, proving your algorithms to be correct, etc.&lt;/p&gt;

&lt;p&gt;One side effect of the course was that pretty soon it became clear that it was the most time-consuming course. I simply did not have enough time in the computer lab to get my programs running correctly. I had my father buy me an Apple IIe computer so that I could do my coding and debugging at home into the wee hours of the night as necessary.&lt;/p&gt;

&lt;p&gt;I found it annoyingly difficult to get out of the BASIC and COBOL mindset into the &amp;ldquo;structured programming&amp;rdquo; enforced by Pascal. As a result, I am sensitive to the idea that &amp;ldquo;learning&amp;rdquo; inferior programming languages can genuinely get in the way of further progress as a programmer.&lt;/p&gt;

&lt;p&gt;I did not enjoy the class at all, but did enjoy the side effect of having a computer at home, which I used for playing some games as well as for word processing, so that I no longer needed to use a typewriter and scissors to work on drafts of papers.&lt;/p&gt;

&lt;p&gt;Again, I will admit that for much of the class, I was proceeding with no real understanding of what I was doing. I was copying and pasting and cargo-culting my way through the class, and through my receiving a 5 on the Advanced Placement exam. After this class, I thought I was done with programming for the rest of my life.&lt;/p&gt;

&lt;p&gt;The problem was that we never wrote any programs to do anything I found interesting, and was never exposed to the general possibilities of what we could do through programming. Writing a recursive program to generate fractals was not very interesting to me. My biggest project in the class was writing a program to maintain a library of books and be able to sort and search it and write it out to floppy disk and read it back in. That was also not very interesting to me.&lt;/p&gt;

&lt;h3 id=&#34;motivations&#34;&gt;Motivations&lt;/h3&gt;

&lt;p&gt;My hobbies at the time included playing chess, learning languages (I was enthusiastic about French and had taught myself Latin), reading lots of books. If the world had been different then, and someone had told me what I could do by knowing how to program, I could have been very interested. For example, suppose that the Web existed then. Suppose someone told me that by knowing how to program, I could write code to create my own flashcard system for learning languages. Then there would be a question of whether an application already exists for purchase that can do that. (It turns out that I have never been satisfied with any flashcard program I have used.)&lt;/p&gt;

&lt;p&gt;I think that to attract interest in computer programming, it is vital to give people reasons that they can relate to. And it is not helpful to &lt;em&gt;discourage&lt;/em&gt; potential programmers by telling them that they should be doing something else, like, just focusing on being a doctor or salesman, giving the argument that the &amp;ldquo;good&amp;rdquo; programmers are already doing their job creating applications ready to use, and that therefore &lt;a href=&#34;http://en.wikipedia.org/wiki/Comparative_advantage&#34;&gt;comparative advantage&lt;/a&gt; says that only professional programmers should learn how to program. This is like telling someone centuries ago that it is no use learning to read or write because others can already do it and probably do it much better. I think the proliferation of information means that more and more people need to be able to analyze it. Whether you call it &amp;ldquo;scripting&amp;rdquo; or &amp;ldquo;macros&amp;rdquo; or &amp;ldquo;customization&amp;rdquo;, the truth is that at some point, real programming is necessary in order to truly understand and control one&amp;rsquo;s data.&lt;/p&gt;

&lt;h2 id=&#34;after-11th-grade&#34;&gt;After 11th grade&lt;/h2&gt;

&lt;p&gt;The rest of the story, &lt;a href=&#34;../../blog/2011/10/25/rip-john-mccarthy-but-lisp-will-never-die/&#34;&gt;I already told earlier&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;My K-12 schooling did nothing to encourage me to actually understand and apply computer science and programming. I wonder to what extent the kind of experience I had still applies today in K-12.&lt;/p&gt;

&lt;h2 id=&#34;postscript&#34;&gt;Postscript&lt;/h2&gt;

&lt;p&gt;Upcoming topics I will write about:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;My eye-opening experience as a teaching assistant for an undergraduate computer science course.&lt;/li&gt;
&lt;li&gt;My current monitoring of Codecademy&amp;rsquo;s offerings and my ongoing efforts to teach my wife computer programming.&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Experiment in learning: completing Stanford online course: Machine Learning</title>
      <link>http://franklinchen.com/blog/2012/01/12/experiment-in-learning-completing-stanford-online-course-machine-learning/</link>
      <pubDate>Thu, 12 Jan 2012 23:54:00 +0000</pubDate>
      
      <guid>http://franklinchen.com/blog/2012/01/12/experiment-in-learning-completing-stanford-online-course-machine-learning/</guid>
      <description>&lt;p&gt;Yesterday I wrote about my experience with completing, in fall 2011, the free online Stanford course &lt;a href=&#34;../../blog/2012/01/11/experiment-in-learning-completing-stanford-online-course-introduction-to-databases/&#34;&gt;Introduction to Databases&lt;/a&gt;. Today I am writing about my experience with completing &lt;a href=&#34;http://www.ml-class.org/&#34;&gt;Machine Learning&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This course was different in many important ways from the databases course.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h2 id=&#34;why-did-i-take-this-online-course&#34;&gt;Why did I take this online course?&lt;/h2&gt;

&lt;p&gt;I have been quite interested in machine learning for a long time now. Years ago, I started taking a course in machine learning at Carnegie Mellon but had to drop it because I was overbooked with too many other things to do. The closest I have ever come to machine learning was completing a course years ago in [&amp;ldquo;language technologies&amp;rdquo;] at Carnegie Mellon. That was a survey course running through the topics of information retrieval, parsing, machine translation, etc.&lt;/p&gt;

&lt;p&gt;For the same reasons that I mentioned in my post yesterday, I did not expect to try to take a traditional formal-classroom machine learning course again: I don&amp;rsquo;t find that to be an efficient route to learning given my time constraints involving work and personal projects outside of work.&lt;/p&gt;

&lt;p&gt;Self-study has always been an option, and I have several machine learning textbooks, some of which are clearer than others, and elegantly explain the theoretical basis, but at this stage of my life I&amp;rsquo;m more interested in &lt;em&gt;application&lt;/em&gt; than in getting deep into theory.&lt;/p&gt;

&lt;h2 id=&#34;completion-of-the-course&#34;&gt;Completion of the course&lt;/h2&gt;

&lt;p&gt;In December 2011, I did complete the machine learning course, having done all the in-lecture quizzes, the review questions, and the programming exercises. There were no exams.&lt;/p&gt;

&lt;p&gt;Although we were not required to, I did all the optional sections of the programming exercises.&lt;/p&gt;

&lt;p&gt;I received my &amp;ldquo;statement of accomplishment&amp;rdquo; recently, and had a perfect score in the course. (That is not say much, and I&amp;rsquo;ll explain why.)&lt;/p&gt;

&lt;h2 id=&#34;my-strategy&#34;&gt;My strategy&lt;/h2&gt;

&lt;p&gt;As with the databases class, I tried to be efficient. In the end, I think I spent about five hours a week on the course.&lt;/p&gt;

&lt;h3 id=&#34;textbooks&#34;&gt;Textbooks&lt;/h3&gt;

&lt;p&gt;I did not use any textbooks during the course. The course was self-contained, with the lectures covering all the concepts and explanations and equations and algorithms necessary to complete the programming assignments.&lt;/p&gt;

&lt;p&gt;Once I did try to look up an algorithm to get more theoretical insight about it, but immediately encountered an annoying problem: everyone seems to use slightly different mathematical notation.&lt;/p&gt;

&lt;h3 id=&#34;lectures-and-demos&#34;&gt;Lectures and demos&lt;/h3&gt;

&lt;p&gt;The lectures were the core of the course. I watched them, taking notes for myself as I felt the need, and made sure to get the in-lecture quizzes right before moving on to the next lecture segment or lecture.&lt;/p&gt;

&lt;p&gt;Professor Andrew Ng obviously put a great deal of care into the video lectures. These were some of the most lucid and attention-maintaining lectures I have ever seen in my entire life, either live or in person. His calm and upbeat tone and pacing, along with useful demos and annotations on the slides, and humility while offering practical advice on the work flow of solving problems using machine learning, were what made this course really enjoyable and memorable!&lt;/p&gt;

&lt;p&gt;In &amp;ldquo;real life&amp;rdquo; lectures, there are a lot of opportunities for wasted time. I think video lectures solve many of the problems because demo setup, false starts, administrative reminders can be omitted or edited out. On the other hand, student questions in real life can also potentially not be useful to every student in attendance, but can also potentially be very useful. I think that in a video lecture, the instructor must be more aware of potential confusions and questions, in order to anticipate them rather then relegate them to online forum discussions. The in-lecture quizzes go a bit of the way toward filling in gaps, I think.&lt;/p&gt;

&lt;h3 id=&#34;review-exercises&#34;&gt;Review exercises&lt;/h3&gt;

&lt;p&gt;I did the review exercises after watching the relevant lectures and completing their embedded quizzes.&lt;/p&gt;

&lt;h3 id=&#34;online-discussion-forum&#34;&gt;Online discussion forum&lt;/h3&gt;

&lt;p&gt;I did not really use the online discussion forum, except when I was encountering bugs in Octave on Mac OS, and looked to see if other people had problems, and yes, they did.&lt;/p&gt;

&lt;h3 id=&#34;programming-exercises&#34;&gt;Programming exercises&lt;/h3&gt;

&lt;p&gt;I started the programming exercise for the week only after completing all the other material. We used the Octave programming language and environment in the course.&lt;/p&gt;

&lt;h2 id=&#34;difficulty-of-the-course&#34;&gt;Difficulty of the course&lt;/h2&gt;

&lt;p&gt;Overall, the course was not very difficult. And that was fine, given my goal of efficient mastery of practical basics, such that I could continue deeper learning and use in the future.&lt;/p&gt;

&lt;p&gt;That said, the hungry theorist within me felt a little left out by the relentlessly practical nature of the course.&lt;/p&gt;

&lt;p&gt;Also, the programming exercises could have been more involved.&lt;/p&gt;

&lt;h2 id=&#34;benefits-of-the-course-format&#34;&gt;Benefits of the course format&lt;/h2&gt;

&lt;h3 id=&#34;time-flexibility-and-efficiency&#34;&gt;Time flexibility and efficiency&lt;/h3&gt;

&lt;p&gt;As mentioned in my post about databases, I appreciated that I could work through lectures at any time, and without having to go to a classroom somewhere. There was also the option of speeding up the video, but I have to confess that just made things eerie, and I only tried that once before returning to normal speed.&lt;/p&gt;

&lt;h3 id=&#34;in-lecture-quizzes&#34;&gt;In-lecture quizzes&lt;/h3&gt;

&lt;p&gt;In-lecture quizzes are a vital part of this whole learning experience. (In fact, I wish there had been more!)&lt;/p&gt;

&lt;h2 id=&#34;flaws-in-the-online-course-format&#34;&gt;Flaws in the online course format&lt;/h2&gt;

&lt;h3 id=&#34;lecture-slides-were-late&#34;&gt;Lecture slides were late&lt;/h3&gt;

&lt;p&gt;The lecture slides tended to arrive late in a week, well after I had already watched the lectures. If lecture slides had been provided as soon as the videos were posted, that would have made note-taking much more efficient. I ended up basically taking my own notes during the lectures before the slides appeared.&lt;/p&gt;

&lt;h3 id=&#34;less-depth&#34;&gt;Less depth&lt;/h3&gt;

&lt;p&gt;I enjoyed that there was a focus on practical application at the expense of theory, but I would have liked to see optional lectures and/or handouts covering theoretical proofs as relevant to what we were applying.&lt;/p&gt;

&lt;p&gt;There was no opportunity to work on an open-ended project for assessment and feedback.&lt;/p&gt;

&lt;h3 id=&#34;programming-exercises-were-too-easy&#34;&gt;Programming exercises were too easy&lt;/h3&gt;

&lt;p&gt;The biggest flaw in the course was that the programming exercises were too easy.&lt;/p&gt;

&lt;p&gt;The level of hand-holding in the exercise descriptions was really extreme, with equations and algorithms given and even a lot of Octave code hints that sometimes practically gave away what needed to be done (which often was just a few lines of code). I would not have minded not having any of those hints. It is not so hard to consult the slides for the algorithms discussed, and some of the specific Octave hints could have been extracted into a more general machine-learning-independent discussion of common Octave computational techniques (such as tricks to express vectorization in the face of bias units).&lt;/p&gt;

&lt;p&gt;The hand-holding extended to the use of a pre-written monolithic driver program for each exercise. Obviously, the student would have done best to study the entire driver program&amp;rsquo;s code, but it was easy to get by without doing so. There should have been at least one assignment in which the student wrote an entire Octave program, including the driver (given sufficient hints). I don&amp;rsquo;t like the idea that many of us who completed this course might be going out in the world just copying and pasting from driver programs to get stuff done. And that brings me to another matter of concern.&lt;/p&gt;

&lt;p&gt;The code given to us was monolithic, not modular. Out of laziness, I did little to remedy the situation, although in a real project rather than a programming exercise to complete quickly and get over with. When I was writing code for the exercises, and testing and running my code, I would just comment code out of the driver programs that I wasn&amp;rsquo;t using at the time. It would have been better if we had been given a modular driver so that we could test different parts of the exercise more independently. The code we were given simply did not adhere to the good programming practices I would expect if were programming in Java or C++ or something like that. Just because it&amp;rsquo;s Octave doesn&amp;rsquo;t mean we should be programming sloppily.&lt;/p&gt;

&lt;p&gt;So I would advise providing more modular and test-encouraging starter code for the programming exercises.&lt;/p&gt;

&lt;h3 id=&#34;octave-glitches&#34;&gt;Octave glitches&lt;/h3&gt;

&lt;p&gt;There was a bug in the Mac OS version of Octave we were told to download. This wasted a good amount of my time when doing one of the programming exercises, until I discovered on the online forum that other people had encountered the same bug. I think that in an online course, making sure up front that everything works on the all the platforms should be of high priority.&lt;/p&gt;

&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;I felt it was worthwhile completing the Stanford online machine learning course. The broad practical survey gives me sufficient confidence that I could immediately use machine learning to solve some real problems today, as well as confidence that I could deepen my understanding by continuing more theoretical study.&lt;/p&gt;

&lt;p&gt;I am grateful to Professor Andrew Ng and his team for making this course run as smoothly as it did.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Experiment in learning: completing Stanford online course: Introduction to Databases</title>
      <link>http://franklinchen.com/blog/2012/01/11/experiment-in-learning-completing-stanford-online-course-introduction-to-databases/</link>
      <pubDate>Wed, 11 Jan 2012 21:31:00 +0000</pubDate>
      
      <guid>http://franklinchen.com/blog/2012/01/11/experiment-in-learning-completing-stanford-online-course-introduction-to-databases/</guid>
      <description>&lt;p&gt;In October 2011, Stanford University broke new ground by offering three free online computer science courses:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.ai-class.com/&#34;&gt;Introduction to Artificial Intelligence&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.db-class.org/&#34;&gt;Introduction to Databases&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.ml-class.org/&#34;&gt;Machine Learning&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Curious, I signed up for all three of the courses, since I had never taken a course in any of these three subjects.&lt;/p&gt;

&lt;p&gt;Because I was not enjoying the AI course and did not expect to find it so useful, I dropped it after completing all the assignments in the first week or two.&lt;/p&gt;

&lt;p&gt;Here I report on the databases course. I will follow up with a report on the machine learning course.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h2 id=&#34;why-did-i-take-this-online-course&#34;&gt;Why did I take this online course?&lt;/h2&gt;

&lt;p&gt;For the record, the subject of databases is not inherently all that interesting to me.&lt;/p&gt;

&lt;p&gt;I took the databases course with the aim of efficiently filling in a gap in my formal education: I was not a computer science major and never took a single computer science course in college, and did not take a databases course in graduate school. I have always had the option, of course, of taking a databases course here at Carnegie Mellon University, or just reading and studying material on my own, but there have been two obvious reasons not to.&lt;/p&gt;

&lt;p&gt;I did not take a databases course at Carnegie Mellon because I have taken courses here before and they are very time-consuming for someone who is working. Not only are there lectures and recitations at fixed times, but also a good amount of homework. I have never liked this format of learning, even when I was a full-time student. It always seemed inefficient, and cramming in a lot of detailed material into each course always left me feeling that I was not mastering everything anyway and was not going to retain it, if the subject was not something of primary interest or use to me. Therefore, I am pretty much done with taking traditional courses for learning. They are not an efficient use of my time or energy. What is efficient is intense learning and mastery of fundamentals and retaining them.&lt;/p&gt;

&lt;p&gt;I did try some self-study years ago, but that was problematic, because I couldn&amp;rsquo;t easily determine what fundamentals to focus on and how to assess myself with relatively little effort. I bought a &lt;a href=&#34;http://www.mhhe.com/engcs/compsci/silberschatz_bridge/index.mhtml&#34;&gt;standard textbook&lt;/a&gt; a long time ago, but was unable to force myself to read it because it was so dry and thick. I just got confused and bored out of my mind.&lt;/p&gt;

&lt;p&gt;Taking an online course with no grade hanging over my head seemed a good way to experiment and learn whatever I felt I was up to learning, based on such factors as difficulty and time commitment.&lt;/p&gt;

&lt;h2 id=&#34;completion-of-the-course&#34;&gt;Completion of the course&lt;/h2&gt;

&lt;p&gt;In December 2011, I did complete the databases course, having done all the in-lecture quizzes, the review exercises, the midterm, and the final exam. I did not get a perfect score, but missed a few points.&lt;/p&gt;

&lt;h2 id=&#34;my-strategy&#34;&gt;My strategy&lt;/h2&gt;

&lt;p&gt;Given how little time I had to devote to the Stanford classes (sadly, much of my weekend time was spent trying to get stuff done by the end of Sunday), I tried to be efficient. In the end, I spent about four hours a week on the databases course, most of which was devoted simply to working through the lecture and demo videos. I can easily imagine an in-depth traditional course taking up to ten hours a week (lectures and recitations, homework, context switching in the middle of the work day).&lt;/p&gt;

&lt;h3 id=&#34;textbooks&#34;&gt;Textbooks&lt;/h3&gt;

&lt;p&gt;I had no time to read any of the suggested textbooks. And any time I tried to browse the old edition of the textbook I have, I just got impatient and confused anyway.&lt;/p&gt;

&lt;h3 id=&#34;lectures-and-demos&#34;&gt;Lectures and demos&lt;/h3&gt;

&lt;p&gt;What I did do was faithfully watch the lectures, and make notes on the slides which I printed out beforehand, master all the in-lecture quizzes (with some exceptions, to be discussed below), and then complete the review exercises, using the &amp;ldquo;testing workbench&amp;rdquo; until I got every one of my answers &amp;ldquo;correct&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;For the demos of relational algebra and XSLT and XQuery and SQL engines, we were urged to experiment ourselves with creating queries and the like, but because of time constraints, I chose not to do that. I did carefully follow along with the commented code transcripts of the demos, however, and pause the demos (which often went at breakneck speed!) to go over the transcript and write some notes to myself before moving on.&lt;/p&gt;

&lt;p&gt;The instructor, Professor Jennifer Widom, was very enthusiastic and clear in her lectures and demos. Her &amp;ldquo;screenside chats&amp;rdquo; were useful in &amp;ldquo;humanizing&amp;rdquo; the course experience.&lt;/p&gt;

&lt;h3 id=&#34;online-discussion-forum&#34;&gt;Online discussion forum&lt;/h3&gt;

&lt;p&gt;I did not really use the online discussion forum.&lt;/p&gt;

&lt;h3 id=&#34;other-study&#34;&gt;Other study&lt;/h3&gt;

&lt;p&gt;I did not much use the optional exercises. I looked at them but did not find them very useful.&lt;/p&gt;

&lt;p&gt;I did not &amp;ldquo;study&amp;rdquo; for the midterm or final exams; I just went and took them with no review of anything.&lt;/p&gt;

&lt;h2 id=&#34;difficulty-of-the-course&#34;&gt;Difficulty of the course&lt;/h2&gt;

&lt;p&gt;Overall, the course was not very difficult. And that was fine. When I&amp;rsquo;m trying to learn the fundamentals of a subject that is not my primary interest or usefulness, I&amp;rsquo;m not interested in being forced to run the gauntlet as though I were training to become an instant expert by completion of a course.&lt;/p&gt;

&lt;p&gt;That said, there were some topics in the course that we were rightly warned were difficult. The material on multivalued dependencies, relational design theory were quite abstract and dry. I will confess that I never fully mastered this material. But I did not feel it worth the effort to master it all.&lt;/p&gt;

&lt;h2 id=&#34;benefits-of-the-course-format&#34;&gt;Benefits of the course format&lt;/h2&gt;

&lt;h3 id=&#34;time-flexibility-and-efficiency&#34;&gt;Time flexibility and efficiency&lt;/h3&gt;

&lt;p&gt;Very nice in comparison with traditional courses was that I could watch the lectures at any time. Typically I worked through lectures before bedtime on some weekdays, on Friday (which I was taking off every week from work from October till December to ease my burden, using up vacation time that had accumulated and needed to be used anyway), and on Saturday. Sometimes I was too occupied during the work week to watch any lectures until Thursday or Friday. That was not optimal, because catching up was unpleasant (as with real life lectures, I really do not like watching one for more than twenty minutes at a time), but at least it was actually possible to load up on lectures and catch up.&lt;/p&gt;

&lt;h3 id=&#34;in-lecture-quizzes&#34;&gt;In-lecture quizzes&lt;/h3&gt;

&lt;p&gt;The in-lecture quizzes were &lt;em&gt;very&lt;/em&gt; helpful, and one of the highlights of this learning format. They enabled me to get quick assessment of whether I totally understood the material I just watched or needed to review a bit more.&lt;/p&gt;

&lt;p&gt;Sometimes I was tired or distracted when watching a lecture segment and found myself at a loss at a quiz. It was very useful to catch myself at frequent quiz checkpoints. In a traditional lecture, I have certainly experienced getting lost and basically wasting a whole half hour or more as a result of not having demonstrated to myself mastery before moving on. With the ungraded quizzes that one can take again and again, I found it mostly easy to go back to review a lecture and then master the topic being quizzed. The process was quite efficient, for the most part.&lt;/p&gt;

&lt;h3 id=&#34;testing-workbench&#34;&gt;Testing workbench&lt;/h3&gt;

&lt;p&gt;The testing workbench was also useful, in that it gave immediate feedback on whether an answer (typically a query I had to write) was correct on a test case. Most of the time I was correct at first try, but sometimes I made a mistake and had to correct it.&lt;/p&gt;

&lt;p&gt;That you could keep on making submissions was, I think, a good feature, because the real goal is to master something, after all. I never liked it when I was in school and sometimes I would take a class and got penalized for making mistakes in homework, even though I quickly mastered the material after the feedback of the homework errors. Should students be graded on what they know at the end of a course, or on what they know at some transient snapshot in time when they were in the process of learning?&lt;/p&gt;

&lt;h3 id=&#34;software-tools&#34;&gt;Software tools&lt;/h3&gt;

&lt;p&gt;I assume some people just typed their queries into the testing workbench and messed with them until they passed. I did not do that. I downloaded the data and tools (such as SQLite), and developed my answers totally outside the testing workbench, then copied and pasted to the testing workbench. I found this a much more useful way to learn and write code.&lt;/p&gt;

&lt;h2 id=&#34;flaws-in-the-online-course-format&#34;&gt;Flaws in the online course format&lt;/h2&gt;

&lt;h3 id=&#34;less-depth&#34;&gt;Less depth&lt;/h3&gt;

&lt;p&gt;Without more detailed homework and projects that would require supplemental reading, there was less depth than there would be in a traditional course.&lt;/p&gt;

&lt;p&gt;The midterm and final exams were somewhat simplistic, being just multiple-choice questions. Perhaps they should be extended with questions asking for SQL and XML queries to be submitted.&lt;/p&gt;

&lt;p&gt;Obviously, the format of the course did not allow for interesting independent projects to be done and assessed.&lt;/p&gt;

&lt;h3 id=&#34;assignment-due-dates&#34;&gt;Assignment due dates&lt;/h3&gt;

&lt;p&gt;Unfortunately, assignment due dates were chosen far beyond the actual schedule of the lectures, which meant a lot of people, including me, &amp;ldquo;procrastinated&amp;rdquo;. This made for a very stressful December as I was spending all my time outside of work struggling to catch up before the final exam. Psychologically, this lax assignment due date policy was a mistake.&lt;/p&gt;

&lt;h3 id=&#34;sql-itself&#34;&gt;SQL itself&lt;/h3&gt;

&lt;p&gt;This may not be a drawback of the course, as such, but of the state of the SQL world: practically every lecture talked about standards and how the implementations of SQL don&amp;rsquo;t implement everything in the SQL standard and differ from each other. We learned constructs that were not supported by any of the SQL implementations recommended to us! I presume that in a traditional course, we would have had access to some proprietary database that did support the full SQL standard?&lt;/p&gt;

&lt;h3 id=&#34;lack-of-worked-out-examples&#34;&gt;Lack of worked-out examples&lt;/h3&gt;

&lt;p&gt;As long as the material wasn&amp;rsquo;t very difficult, I found the process of verifying mastery to be very efficient. The trouble came when I didn&amp;rsquo;t understand something. In particular, multivalued dependencies and relational design theory turned out to cause me problems. I chose not to work too hard to resolve them, but was surprised by the lack of suitable material provided to help out.&lt;/p&gt;

&lt;p&gt;What I would have found very useful would have been more supplementary material, in the form of worked-out examples. And I was surprised that the optional exercises only came with an answer key, not &lt;em&gt;explanations&lt;/em&gt;. It&amp;rsquo;s not sufficiently useful to know whether one&amp;rsquo;s answer is correct, or to be told which answer (of a multiple-choice question) is correct.&lt;/p&gt;

&lt;p&gt;Theoretically, I could have asked for help on the discussion forum, and I would have if the material happened to be more interesting and important. But I happened to make the decision to not fully master every corner of multivalued dependencies and normalization, because I judged that if I ever needed to get this stuff straight, I could run an algorithm rather than compute things by hand.&lt;/p&gt;

&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;I felt it was worthwhile completing the Stanford online databases course. For me, it was as much a personal experiment with online learning as it was a matter of learning more about databases in particular.&lt;/p&gt;

&lt;p&gt;I am grateful to Professor Jennifer Widom and her team for making this course possible.&lt;/p&gt;

&lt;h2 id=&#34;postscript&#34;&gt;Postscript&lt;/h2&gt;

&lt;p&gt;I will also write a report on the machine learning course, which was very different in various ways from the databases course.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Why everyone should learn computer science</title>
      <link>http://franklinchen.com/blog/2011/12/09/why-everyone-should-learn-computer-science/</link>
      <pubDate>Fri, 09 Dec 2011 22:20:00 +0000</pubDate>
      
      <guid>http://franklinchen.com/blog/2011/12/09/why-everyone-should-learn-computer-science/</guid>
      <description>&lt;p&gt;On Sunday I wrote an introductory blog post for &lt;a href=&#34;http://www.csedweek.org/&#34;&gt;Computer Science Education
 Week (CSEDWeek)&lt;/a&gt; in which &lt;a href=&#34;../../blog/2011/12/04/why-i-am-writing-this-week-for-csedweek/&#34;&gt;I posed some questions&lt;/a&gt; to follow up on.&lt;/p&gt;

&lt;p&gt;Today I&amp;rsquo;m going to begin exploring my central thesis that has been brewing in my mind in the past couple of years, which is that &lt;strong&gt;everyone should learn computer science&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;I mean &lt;strong&gt;everyone&lt;/strong&gt;. And I mean &lt;strong&gt;computer science&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;How can I dare much such a strong claim?&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h2 id=&#34;what-i-am-not-saying&#34;&gt;What I am &lt;em&gt;not&lt;/em&gt; saying&lt;/h2&gt;

&lt;p&gt;First, let me get out of the way what I am &lt;em&gt;not&lt;/em&gt; stating.&lt;/p&gt;

&lt;p&gt;I am not stating that the United States should encourage more college students to enter computer science &amp;ldquo;because&amp;rdquo; we have high-tech jobs we want to fill with Americans.&lt;/p&gt;

&lt;p&gt;I am not stating that computing careers are high-paying and desirable and we should be recruiting K-12 students into them.&lt;/p&gt;

&lt;p&gt;I am not stating that K-12 schools should be filled with computers and that all teachers should start using &amp;ldquo;educational&amp;rdquo; software in their classrooms.&lt;/p&gt;

&lt;p&gt;I am not stating that babies and toddlers need to get a head start in life with iPads and learning to type on computer keyboards.&lt;/p&gt;

&lt;p&gt;I am not stating that everyone should learn how to use Microsoft Office in school.&lt;/p&gt;

&lt;p&gt;I am not stating that people should be &amp;ldquo;computer literate&amp;rdquo; in the sense of knowing what a USB port is and how many bytes there are in a terabyte and how to maximize a window.&lt;/p&gt;

&lt;h2 id=&#34;what-i-am-saying&#34;&gt;What I am saying&lt;/h2&gt;

&lt;p&gt;By &amp;ldquo;everyone&amp;rdquo;, I mean everyone, not just college-bound students or those who are babies and toddlers now.&lt;/p&gt;

&lt;p&gt;By &amp;ldquo;learn computer science&amp;rdquo;, I mean learn enough about computation to be able to write and run simple programs to do a desired task, to have an idea of what more complicated programs do, to be informed about what is fundamentally going on when using a web browser, sending email, posting information on Facebook, doing a Google search, being infected with a virus, etc.&lt;/p&gt;

&lt;h2 id=&#34;why-i-am-saying-it&#34;&gt;Why I am saying it&lt;/h2&gt;

&lt;p&gt;My claim: we are living in a time of human societal change unparalleled since Gutenberg invented the printing press in the 15th century and people began to be able to write, read, and share information as individuals and as institutions.&lt;/p&gt;

&lt;p&gt;A corollary: within around two decades, anyone who does not know the fundamentals of computer science will lack important understanding about the world, how it operates, and how they can take control of their lives (as opposed to cede all control to institutions such as governments and corporations).&lt;/p&gt;

&lt;p&gt;The best analogy I can come up with is this: if you live in a developed nation such as the United States today, and you do not know how to read or write, you are missing a huge amount of information and knowledge that is spread around, and furthermore, you are lacking in personal autonomy and power. Being illiterate, you are very dependent on others to get through life. Similarly, if you do not know basic arithmetic, you are very dependent on others.&lt;/p&gt;

&lt;p&gt;A corollary: computer science education should soon be considered a &lt;em&gt;basic requirement&lt;/em&gt;, in the same sense that &lt;em&gt;reading, writing, arithmetic&lt;/em&gt; are. It is a non-starter to treat computer science education as some kind of optional subject, one meant for only a few select students. Computer science is not like physics or English literature. People do not need to know about quantum mechanics or Shakespeare in order to have a decent understanding of everyday life, but computation is everywhere now.&lt;/p&gt;

&lt;h2 id=&#34;how-to-bring-computer-science-education-to-everyone&#34;&gt;How to bring computer science education to everyone?&lt;/h2&gt;

&lt;p&gt;I don&amp;rsquo;t have the answer yet to the question of how to bring computer science education to everyone. But I think the first step is to actually agree that this goal is important. The second step is to agree on what it is that people really need to know. The third step is to determine the best ways of teaching that.&lt;/p&gt;

&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;Humanity is at a crossroads. The ubiquity of computing technology points towards two possible futures: one is a &lt;a href=&#34;http://en.wikipedia.org/wiki/Brave_New_World&#34;&gt;brave new world&lt;/a&gt; in which technology is controlled by an elite and the masses are distracted and docile consumers, and the other is a liberated world in which everyone is potentially a creator, a programmer, a critical thinker. Which world do you want to live in?&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Why I am writing this week for CSEdWeek</title>
      <link>http://franklinchen.com/blog/2011/12/04/why-i-am-writing-this-week-for-csedweek/</link>
      <pubDate>Sun, 04 Dec 2011 20:54:00 +0000</pubDate>
      
      <guid>http://franklinchen.com/blog/2011/12/04/why-i-am-writing-this-week-for-csedweek/</guid>
      <description>&lt;figure &gt;
    
        &lt;img src=&#34;../../images/csedweek-2011.png&#34; /&gt;
    
    
    &lt;figcaption&gt;
        &lt;h4&gt;Logo for CSEdWeek 2011&lt;/h4&gt;
        
    &lt;/figcaption&gt;
    
&lt;/figure&gt;


&lt;p&gt;This week (December 4 through 10, 2011) has been designed as &lt;a href=&#34;http://www.csedweek.org/&#34;&gt;Computer Science Education Week (CSEDWeek)&lt;/a&gt; by the US House of Representatives to recognize the importance of computer science education for students at all levels.&lt;/p&gt;

&lt;p&gt;I am one of over 2000 people who have pledged online to participate in CSEdWeek. I will be blog about &lt;strong&gt;computation&lt;/strong&gt; and the &lt;strong&gt;learning&lt;/strong&gt; and &lt;strong&gt;teaching&lt;/strong&gt; of it, in every context that I have experienced it.&lt;/p&gt;

&lt;p&gt;Let me start by raising some questions about what is at stake.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h2 id=&#34;definitions&#34;&gt;Definitions&lt;/h2&gt;

&lt;p&gt;What do you think of when you even hear of &amp;ldquo;Computer Science education&amp;rdquo;?  (I welcome comments below.)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Do you imagine elementary schools equipped with iPads?&lt;/li&gt;
&lt;li&gt;Do you imagine courses about how to use applications such as Microsoft Word or Gmail?&lt;/li&gt;
&lt;li&gt;Do you imagine Advanced Placement courses spreading to every high school in the country, with high enrollments in the courses?&lt;/li&gt;
&lt;li&gt;Do you imagine community college and technical schools teaching something about programming in Visual Basic or Java?&lt;/li&gt;
&lt;li&gt;Do you imagine undergraduates learning about asymptotic mathematical analysis of parallel algorithms?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I do not like the phrase &amp;ldquo;computer science&amp;rdquo;. Someone once said, computer science is not about &lt;strong&gt;computers&lt;/strong&gt; and is not &lt;strong&gt;science&lt;/strong&gt;. I heartily agree. The essence of what computers do is what is important, not the physical details of the what &lt;strong&gt;computes&lt;/strong&gt; or the very specific details of what applications have already been provided for use on a computer. And the principles of computation are just mathematics, which is not an empirical science.&lt;/p&gt;

&lt;p&gt;So right off the bat, I think there is a lot of opportunity for confusion when trying to determine what the scope of &amp;ldquo;computer science&amp;rdquo; is (versus programming, human-computer interaction, software engineering, psychology and politics of software development in the real world), what should be taught, to whom, and by whom.&lt;/p&gt;

&lt;p&gt;I especially dislike the word &amp;ldquo;education&amp;rdquo;. It often implies some formal degree program, tuition, certifications, and other such matters. I&amp;rsquo;m interested in the &lt;strong&gt;learning&lt;/strong&gt; and &lt;strong&gt;teaching&lt;/strong&gt;, not in the &lt;strong&gt;student&lt;/strong&gt; or &lt;strong&gt;teacher&lt;/strong&gt; or &lt;strong&gt;school&lt;/strong&gt; part of the story.&lt;/p&gt;

&lt;h2 id=&#34;learning-and-teaching-outside-of-school&#34;&gt;Learning and teaching outside of school&lt;/h2&gt;

&lt;p&gt;Later this week I will write about how various experiences in school turned me off from computers, from computing, and offer suggestions on how to fix the problem of discouraging young people from pursuing a computing-oriented learning and career path.&lt;/p&gt;

&lt;p&gt;But today, I just want to mention a remarkable event that occurred just yesterday, the &lt;a href=&#34;http://blog.coderetreat.com/global-day-of-coderetreat&#34;&gt;Global Day of CodeRetreat&lt;/a&gt;, held simultaneously in 90 cities with around 2000 attendees. I participated in the local &lt;a href=&#34;http://globalcoderetreat2011pittsburgh.eventbrite.com/&#34;&gt;Pittsburgh edition&lt;/a&gt; of the event.  (I will write later this week in detail about my experience at the event.)&lt;/p&gt;

&lt;p&gt;The motto of the event is &amp;ldquo;Programmers honing their craft together.&amp;rdquo;&lt;/p&gt;

&lt;p&gt;The buzzwords used here are very far from those in academic &amp;ldquo;computer science&amp;rdquo;. I bring up the event because I think that one thing that is entirely missing in the discussion of &amp;ldquo;computer science education&amp;rdquo; is, what is really important and valuable to society, and who provides it, and where?  It is fashionable in academia to look down on anything that would speak of &amp;ldquo;programmers&amp;rdquo; (rather than &amp;ldquo;computer scientists&amp;rdquo;), &amp;ldquo;honing&amp;rdquo; (rather than &amp;ldquo;proving&amp;rdquo;), &amp;ldquo;craft&amp;rdquo; (rather than &amp;ldquo;science&amp;rdquo;), and &amp;ldquo;together&amp;rdquo; (conventional education pays only lip service to the importance of collaboration).&lt;/p&gt;

&lt;p&gt;I believe that something like CodeRetreat is fair game for discussion during CSEdWeek, because the enthusiastic participation in this event speaks to the passionate desire by volunteers to help people learn, and by working software developers to continue to improve themselves.&lt;/p&gt;

&lt;h2 id=&#34;stay-tuned&#34;&gt;Stay tuned&lt;/h2&gt;

&lt;p&gt;Stay tuned for posts later this week on the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;problems I faced in computer science education in K-12, college&lt;/li&gt;
&lt;li&gt;CodeRetreat and what people learn there&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
  </channel>
</rss>