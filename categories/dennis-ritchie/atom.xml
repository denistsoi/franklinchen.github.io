<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Dennis Ritchie on Franklin Chen</title>
    <link>http://franklinchen.com/categories/dennis-ritchie/atom/index.xml</link>
    <description>Recent content in Dennis Ritchie on Franklin Chen</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="http://franklinchen.com/categories/dennis-ritchie/atom/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Why Dennis Ritchie Is Important</title>
      <link>http://franklinchen.com/blog/2011/10/13/why-dennis-ritchie-is-important/</link>
      <pubDate>Thu, 13 Oct 2011 18:35:00 +0000</pubDate>
      
      <guid>http://franklinchen.com/blog/2011/10/13/why-dennis-ritchie-is-important/</guid>
      <description>&lt;p&gt;I first heard of the death of &lt;a href=&#34;http://en.wikipedia.org/wiki/Dennis_Ritchie&#34;&gt;Dennis Ritchie&lt;/a&gt; yesterday, through a link (from Twitter or one of my blog feeds) to &lt;a href=&#34;http://en.wikipedia.org/wiki/Rob_Pike&#34;&gt;Rob Pike&lt;/a&gt;&amp;rsquo;s short &lt;a href=&#34;https://plus.google.com/u/0/101960720994009339267/posts/ENuEDDYfvKP&#34;&gt;announcement on Google+&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;(Rob Pike has &lt;a href=&#34;https://plus.google.com/u/0/101960720994009339267/posts/33mmANQZDtY&#34;&gt;another post&lt;/a&gt; up now.)&lt;/p&gt;

&lt;p&gt;My first thought was, &amp;ldquo;I don&amp;rsquo;t even know when the last time was that he was in the media at all&amp;rdquo;. He was so private. In my entire career in computing, I barely remembered the &lt;a href=&#34;http://www.gotw.ca/publications/c_family_interview.htm&#34;&gt;occasional interview&lt;/a&gt; of him, since he never said anything outrageous or self-aggrandizing.&lt;/p&gt;

&lt;p&gt;My second thought was, his impact on my life was profound, but in such a different way from the impact on my life by, say, Steve Jobs. Whereas Jobs by personal example and creation of consumer products inspired me to get into computing, Ritchie by his quiet contributions laid the very foundations for the work I actually do.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h2 id=&#34;c&#34;&gt;C&lt;/h2&gt;

&lt;p&gt;Ritchie invented the programming language C, for one thing; C grew into the foundation of almost all programming in the computing industry. I was feeling slightly bad about just having recently poked a little bit of &lt;a href=&#34;../../blog/2011/10/04/a-blast-from-the-past-c-plus-plus-abuse/&#34;&gt;harmless fun&lt;/a&gt; at the C family of programming languages, given the importance of C, but remembered that Ritchie said it himself: &amp;ldquo;C is quirky, flawed, and an enormous success&amp;rdquo;. So succinct, this comment, just like C with its spare syntax!&lt;/p&gt;

&lt;p&gt;C was not so easy for me to learn at first, but mastering it eventually gave me a sense of real power and a basis for understanding and using higher-level languages. I learned how to implement and tune data structures using C. I studied the assembly language generated by C compilers to understand assembly language, as well as understand how compilers work. When learning high-level languages such as &lt;a href=&#34;http://schemers.org/&#34;&gt;Scheme&lt;/a&gt;, I found it particularly useful to study the C code generated by some of the compilers for these languages. C was a &lt;em&gt;lingua franca&lt;/em&gt; for understanding how things worked, a low-level language that was just a step above machine language. The mental model provided by understanding C and how it compiles is surely a required part of a complete education of a programmer!&lt;/p&gt;

&lt;p&gt;C will still be alive a century from now, even if higher-level languages supplant it for most uses.&lt;/p&gt;

&lt;h2 id=&#34;unix&#34;&gt;Unix&lt;/h2&gt;

&lt;p&gt;C was not invented in a vacuum. It was developed and refined by Ritchie in order to implement (along with Ken Thompson) the Unix operating system and complete programming environment. The world is profoundly indebted to Unix and its variants, of course. I have used some kind of Unix, happily, during my entire career. I have used a dozen Unix variants, from ULTRIX to SunOS to Apple&amp;rsquo;s A/UX to NetBSD to Linux, and finally to Apple&amp;rsquo;s Mac OS X, where my most important permanently open application is arguably Terminal (for the &lt;code&gt;bash&lt;/code&gt; command line)!&lt;/p&gt;

&lt;p&gt;Some form of Unix will still be alive a century from now. Its basic ideas and ideals are timeless.&lt;/p&gt;

&lt;h2 id=&#34;free-and-open-source-software-movement&#34;&gt;Free and open source software movement&lt;/h2&gt;

&lt;p&gt;Finally, an entirely unintended consequence of Ritchie&amp;rsquo;s contributions to C and Unix was that they enabled the free software movement and the amazing community and products that developed from that movement. I have not only benefited from the availability of free software, but also I have been inspired by the sharing culture behind it, and live it every day. Even if Ritchie was not a direct part of it, the generous spirit in which he did his work and encouraged the spread of C and Unix outside Bell Labs somehow seems embedded permanently in the movement.&lt;/p&gt;

&lt;p&gt;A century from now, Ritchie will still be remembered. I am sure of that.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>