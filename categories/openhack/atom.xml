<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Openhack on Franklin Chen</title>
    <link>http://franklinchen.com/categories/openhack/atom/index.xml</link>
    <description>Recent content in Openhack on Franklin Chen</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="http://franklinchen.com/categories/openhack/atom/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>OpenHack Pittsburgh: exploring Scala odds and ends</title>
      <link>http://franklinchen.com/blog/2013/03/25/openhack-pittsburgh-exploring-scala-odds-and-ends/</link>
      <pubDate>Mon, 25 Mar 2013 22:43:00 -0400</pubDate>
      
      <guid>http://franklinchen.com/blog/2013/03/25/openhack-pittsburgh-exploring-scala-odds-and-ends/</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;http://www.meetup.com/pittsburgh-ruby/events/106184432/&#34;&gt;A third OpenHack Pittsburgh&lt;/a&gt; meeting was organized, and I attended again. It was held again at &lt;a href=&#34;http://www.thebeautyshoppe.org/&#34;&gt;The Beauty Shoppe&lt;/a&gt;, just like the &lt;a href=&#34;../../blog/2013/02/25-openhack-pittsburgh-studying-scala/&#34;&gt;previous time&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I was pleased by how much progress had been made in the construction inside. The space was looking really nice.&lt;/p&gt;

&lt;h2 id=&#34;scala-stuff&#34;&gt;Scala stuff&lt;/h2&gt;

&lt;p&gt;My plan was to continue working on a personal project in Scala. That plan kind of changed because Roy wanted to ask me questions about Scala. I told him that I&amp;rsquo;m still learning stuff myself, but answered his questions as well as I could.&lt;/p&gt;

&lt;h3 id=&#34;unit-testing&#34;&gt;Unit testing&lt;/h3&gt;

&lt;p&gt;One question Roy had was about unit test frameworks and generating independent tests (as opposed to writing a single test that makes many generated assertions, because such a test would simply stop at the first failed assertion. I told him this was easy to do with either the &lt;a href=&#34;http://etorreborre.github.com/specs2/&#34;&gt;Specs2&lt;/a&gt; unit testing framework or the &lt;a href=&#34;http://www.scalatest.org/&#34;&gt;ScalaTest&lt;/a&gt; one (I use Specs2).&lt;/p&gt;

&lt;p&gt;Here&amp;rsquo;s sample code showing &lt;a href=&#34;https://github.com/FranklinChen/test-loop-over-tests&#34;&gt;how to do it&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;property-based-testing&#34;&gt;Property-based testing&lt;/h3&gt;

&lt;p&gt;I also mentioned that I was working on a presentation on a cool Scala library supporting property-based testing, &lt;a href=&#34;http://www.scalacheck.org/&#34;&gt;ScalaCheck&lt;/a&gt;.&lt;/p&gt;

&lt;h4 id=&#34;update-of-2013-04-11&#34;&gt;(Update of 2013-04-11)&lt;/h4&gt;

&lt;p&gt;I ended up &lt;a href=&#34;../../blog/2013/04/11/my-pittsburgh-scala-meetup-talk-on-property-based-testing-using-scalacheck/&#34;&gt;giving a talk at the Pittsburgh Scala meetup in April on ScalaCheck&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;continuations&#34;&gt;Continuations&lt;/h3&gt;

&lt;p&gt;Roy asked about continuations in Scala, in the context of an idea he had for a Web app.&lt;/p&gt;

&lt;p&gt;I said that I hadn&amp;rsquo;t personally used first-class continuations in Scala, but knew support for delimited continuations existed as a compiler plugin. So I looked up how to use them and created a little project as proof of concept (nothing worth seeing, just typical examples of code with &lt;code&gt;shift&lt;/code&gt; and &lt;code&gt;reset&lt;/code&gt; comparable to how I&amp;rsquo;d seen them used in other languages with delimited continuations); check out &lt;a href=&#34;http://suereth.blogspot.com/2010/03/how-you-should-think-about-delimited.html&#34;&gt;Josh Suereth&amp;rsquo;s (somewhat dated) article on delimited continuations in Scala&lt;/a&gt; for more details.&lt;/p&gt;

&lt;p&gt;But I asked Roy what he really wanted continuations for anyway. They are a low-level concept, and there are higher-level constructs built on top of continuations that I think are more useful.&lt;/p&gt;

&lt;p&gt;He said that he wanted to be able to have code &amp;ldquo;look&amp;rdquo; like it was synchronous but actually be asynchronous.&lt;/p&gt;

&lt;h4 id=&#34;update-of-2014-04-21&#34;&gt;(Update of 2014-04-21)&lt;/h4&gt;

&lt;p&gt;Scala continuations have been deprecated in &lt;a href=&#34;http://typesafe.com/blog/scala-211-has-arrived&#34;&gt;Scala 2.11&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;futures&#34;&gt;Futures&lt;/h3&gt;

&lt;p&gt;So I told him, that&amp;rsquo;s the perfect use case for &lt;a href=&#34;http://docs.scala-lang.org/overviews/core/futures.html&#34;&gt;futures&lt;/a&gt;, which are well-supported in Scala, especially because of their compositional monadic properties in conjunction with nice &lt;code&gt;for&lt;/code&gt;-comprehension syntax.&lt;/p&gt;

&lt;p&gt;I said, the only drawback is that you have to write code in monadic style.&lt;/p&gt;

&lt;p&gt;When I went home after OpenHack Pittsburgh, however, I coincidentally found that there was a project to improve the syntax of writing this kind of asynchronous computation! &lt;a href=&#34;http://doc.akka.io/docs/akka/snapshot/scala/dataflow.html&#34;&gt;Akka Dataflow&lt;/a&gt; does precisely this, using the continuation plugin.&lt;/p&gt;

&lt;h4 id=&#34;update-of-2013-08-27&#34;&gt;(Update of 2013-08-27)&lt;/h4&gt;

&lt;p&gt;There has been other work to improve syntactic support for asynchronous computation. &lt;a href=&#34;https://github.com/scala/async&#34;&gt;&lt;code&gt;async&lt;/code&gt;&lt;/a&gt; uses &lt;a href=&#34;http://scalamacros.org/&#34;&gt;macros&lt;/a&gt; to try to provide the nice syntactic experience without the overhead of the continuation plugin.&lt;/p&gt;

&lt;h4 id=&#34;update-of-2013-12-17&#34;&gt;(Update of 2013-12-17)&lt;/h4&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/akka/akka/commit/66e40084946f6f993a2c62d9921718704daf448a&#34;&gt;&lt;code&gt;dataflow&lt;/code&gt; has been deprecated&lt;/a&gt;, now that &lt;code&gt;async&lt;/code&gt; is fully mature (I have been happily using it for a while now).&lt;/p&gt;

&lt;h4 id=&#34;update-of-2013-12-31&#34;&gt;(Update of 2013-12-31)&lt;/h4&gt;

&lt;p&gt;More specifically, &lt;code&gt;async&lt;/code&gt; was much improved just in time for it to be officially used in the Coursera course &amp;ldquo;Principles of Reactive Programming&amp;rdquo;, which &lt;a href=&#34;http://conscientiousprogrammer.com/blog/2013/12/31/review-of-the-free-coursera-course-principles-of-reactive-programming/&#34;&gt;I just completed and reviewed&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;implicits&#34;&gt;Implicits&lt;/h3&gt;

&lt;p&gt;Roy asked me about other interesting features of Scala. I had to say something about implicits, of course, useful for simulating monkey patching as well as simulating Haskell type classes.&lt;/p&gt;

&lt;p&gt;Implicits are probably the single most interesting language feature of Scala.&lt;/p&gt;

&lt;h4 id=&#34;update-of-2014-02-13&#34;&gt;(Update of 2014-02-13)&lt;/h4&gt;

&lt;p&gt;There was a &lt;a href=&#34;http://conscientiousprogrammer.com/blog/2014/02/13/pittsburgh-scala-meetup-implicits/&#34;&gt;Pittsburgh Scala Meetup session on implicits&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;specialization-of-generics&#34;&gt;Specialization of generics&lt;/h3&gt;

&lt;p&gt;Roy wanted to know whether generics can be specialized in Scala (in contrast to Java, which treats generics as erasure). I said, yes, actually. Fully automatic, efficient specialization is still being improved on, but for now, there&amp;rsquo;s a manual way to do specialization through the &lt;a href=&#34;http://lampwww.epfl.ch/~dragos/files/scala-spec.pdf&#34;&gt;&lt;code&gt;@specialized&lt;/code&gt; annotation&lt;/a&gt;.&lt;/p&gt;

&lt;h4 id=&#34;update-of-2014-07-17&#34;&gt;(Update of 2014-07-17)&lt;/h4&gt;

&lt;p&gt;There&amp;rsquo;s also &lt;a href=&#34;http://scala-miniboxing.org/&#34;&gt;Miniboxing&lt;/a&gt; for efficiency.&lt;/p&gt;

&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;It was stimulating talking with Roy about Scala and trying to explain stuff to him on the fly, or look stuff up (thank goodness for WiFi in The Beauty Shoppe!), or code something right there and then. The conversations also caused me to do my homework after the meetup!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>OpenHack Pittsburgh: studying Scala</title>
      <link>http://franklinchen.com/blog/2013/02/25/openhack-pittsburgh-studying-scala/</link>
      <pubDate>Mon, 25 Feb 2013 22:58:33 -0500</pubDate>
      
      <guid>http://franklinchen.com/blog/2013/02/25/openhack-pittsburgh-studying-scala/</guid>
      <description>

&lt;p&gt;Last month was the very first meeting of &lt;a href=&#34;../../blog/2013/01/21/attending-the-first-openhack-pittsburgh-meeting/&#34;&gt;OpenHack Pittsburgh&lt;/a&gt;, so I eagerlly looked forward to attending &lt;a href=&#34;http://www.meetup.com/pittsburgh-ruby/events/100822012/&#34;&gt;the second one&lt;/a&gt;, which was held at &lt;a href=&#34;http://www.thebeautyshoppe.org/&#34;&gt;The Beauty Shoppe&lt;/a&gt;, a new coworking space in East Liberty.&lt;/p&gt;

&lt;p&gt;The space was still under construction and so it was kind of surreal being in there with a half-finished bathroom, walls and rooms that were not completely done yet, missing light fixtures, etc. It was cool that we were allowed to use the space though.&lt;/p&gt;

&lt;h2 id=&#34;ashamed-of-leaving-early&#34;&gt;Ashamed of leaving early&lt;/h2&gt;

&lt;p&gt;Unfortunately, there was something of a schedule conflict, because I was also looking forward to attending, in the same evening, another edition of the French and blues music jam I&amp;rsquo;ve been participating in. I ended up decided to attend OpenHack Pittsburgh for a while before leaving early and going to the music jam. &lt;a href=&#34;../../blog/2013/02/25/stepping-it-up-at-the-french-and-blues-jam/&#34;&gt;I did make it to the music jam&lt;/a&gt;, but in retrospect, I should have simply chosen not to attend OpenHack Pittsburgh at all.&lt;/p&gt;

&lt;p&gt;I felt bad about leaving early, when everyone was so excited about the projects they were working on for the evening. There was even a &lt;a href=&#34;http://en.wikipedia.org/wiki/3D_printing&#34;&gt;3d printer&lt;/a&gt; in action!&lt;/p&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;http://openhack.github.io/pittsburgh/images/2013-01/whit-coin-counter.jpg&#34; /&gt;
    
    
    &lt;figcaption&gt;
        &lt;h4&gt;Chad and the coin counter&lt;/h4&gt;
        
    &lt;/figcaption&gt;
    
&lt;/figure&gt;


&lt;p&gt;Because I knew I was leaving early, I spent the time there just continuing to learn more Scala on my own.&lt;/p&gt;

&lt;p&gt;I felt it was impolite for me to attend an event when I knew I had to leave early. I will remember this in the future.&lt;/p&gt;

&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://en.wikipedia.org/wiki/Fear_of_missing_out&#34;&gt;Fear of missing out&lt;/a&gt; is insidious. It is better to be fully present and engaged in &lt;em&gt;fewer&lt;/em&gt; activities rather than try to do too much. I felt deeply ashamed of leaving early, and vowed that if I attend OpenHack Pittsburgh meetings in the future, I will never leave early again. Something like this should be all or none.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Attending the first OpenHack Pittsburgh meeting</title>
      <link>http://franklinchen.com/blog/2013/01/21/attending-the-first-openhack-pittsburgh-meeting/</link>
      <pubDate>Mon, 21 Jan 2013 21:49:13 -0500</pubDate>
      
      <guid>http://franklinchen.com/blog/2013/01/21/attending-the-first-openhack-pittsburgh-meeting/</guid>
      <description>


&lt;figure &gt;
    
        &lt;img src=&#34;http://openhack.github.com/images/logo-green.png&#34; /&gt;
    
    
    &lt;figcaption&gt;
        &lt;h4&gt;OpenHack logo&lt;/h4&gt;
        
    &lt;/figcaption&gt;
    
&lt;/figure&gt;


&lt;p&gt;I was excited to attend the &lt;a href=&#34;http://www.meetup.com/pittsburgh-ruby/events/96033112/&#34;&gt;very first meeting&lt;/a&gt; of &lt;a href=&#34;http://openhack.github.com/pittsburgh/&#34;&gt;OpenHack Pittsburgh&lt;/a&gt;, out of curiosity and as a way to force myself to make progress on a personal programming project of mine using Scala (ironically, after spending the day at work on Scala; apparently I couldn&amp;rsquo;t get enough of it).&lt;/p&gt;

&lt;p&gt;The point of &lt;a href=&#34;http://openhack.github.com/&#34;&gt;OpenHack&lt;/a&gt; is to provide a space for programmers to meet up and work on something. It could be a shared project, it could be a personal project.&lt;/p&gt;

&lt;p&gt;Some people come with something to work on, others come to meet other programmers and pitch in on a project, others come to learn something. It was cool that some people left the first meeting finally getting set up on Ruby or Python or Clojure, and working on a project, with help from other people.&lt;/p&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;../../images/openhack-pittsburgh-2013-01-21/room.jpeg&#34; /&gt;
    
    
    &lt;figcaption&gt;
        &lt;h4&gt;One room&lt;/h4&gt;
        
    &lt;/figcaption&gt;
    
&lt;/figure&gt;



&lt;figure &gt;
    
        &lt;img src=&#34;../../images/openhack-pittsburgh-2013-01-21/conference-room.jpeg&#34; /&gt;
    
    
    &lt;figcaption&gt;
        &lt;h4&gt;Conference room&lt;/h4&gt;
        
    &lt;/figcaption&gt;
    
&lt;/figure&gt;


&lt;p&gt;And yes, in the two hours I was there, I did make good progress on my project. It&amp;rsquo;s not finished yet though.&lt;/p&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;../../images/openhack-pittsburgh-2013-01-21/closeup.jpeg&#34; /&gt;
    
    
    &lt;figcaption&gt;
        &lt;h4&gt;Franklin and others&lt;/h4&gt;
        
    &lt;/figcaption&gt;
    
&lt;/figure&gt;


&lt;h2 id=&#34;thanks&#34;&gt;Thanks&lt;/h2&gt;

&lt;p&gt;Many thanks to &lt;a href=&#34;http://www.4moms.com/&#34;&gt;4moms&lt;/a&gt; for hosting the first OpenHack Pittsburgh meetup, and providing the sandwiches and chips and beverages!&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>